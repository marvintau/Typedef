{"version":3,"sources":["webpack://start-webpack-conf/webpack/universalModuleDefinition","webpack://start-webpack-conf/./src/Main.js"],"names":["HINGE_END","HINGE_SUCC","by","at","STROKE_COUNTER","strokes","specSketch","addStroke","strokeName","strokeSpec","getStroke","scale","rotate","stroke","copy","id","editorElement","document","getElementById","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVA,IAAIA,SAAS,GAAG,QAAhB;AAAA,IACIC,UAAU,GAAG;AAACC,IAAE,EAAE,CAAL;AAAQC,IAAE,EAAEH;AAAZ,CADjB;AAGA,IAAII,cAAc,GAAG,CAArB;AAEA,IAAIC,OAAO,GAAG,EAAd;AAAA,IACIC,UAAU,GAAG,EADjB;;AAGA,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,UAA/B,EAA0C;AACtCJ,SAAO,CAACG,UAAD,CAAP,GAAsBC,UAAtB;AACH;;AAED,SAASC,SAAT,CAAmBF,UAAnB,EAA+B;AAACG,OAAD;AAAQC;AAAR,IAAkB,EAAjD,EAAoD;AAChD,MAAIC,MAAM,GAAGR,OAAO,CAACG,UAAD,CAAP,CAAoBM,IAApB,EAAb;AACAD,QAAM,CAACE,EAAP,GAAa,GAAEX,cAAe,IAAGI,UAAW,EAA5C;AAEA,SAAOK,MAAM,CAACF,KAAP,CAAaA,KAAb,EAAoBC,MAApB,CAA2BA,MAA3B,CAAP;AACH;;AAED,IAAII,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAApB;AACAC,OAAO,CAACC,GAAR,CAAY,KAAZ,E,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,oB","file":"8f3cdd9b2732a137bb3b.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"start-webpack-conf\"] = factory();\n\telse\n\t\troot[\"start-webpack-conf\"] = factory();\n})(window, function() {\nreturn ","var HINGE_END = 0.999999,\n    HINGE_SUCC = {by: 0, at: HINGE_END};\n\nvar STROKE_COUNTER = 0;\n\nlet strokes = [],\n    specSketch = {};\n\nfunction addStroke(strokeName, strokeSpec){\n    strokes[strokeName] = strokeSpec;\n}\n\nfunction getStroke(strokeName, {scale, rotate} = {}){\n    let stroke = strokes[strokeName].copy();\n    stroke.id = `${STROKE_COUNTER}-${strokeName}`;\n\n    return stroke.scale(scale).rotate(rotate);\n}\n\nlet editorElement = document.getElementById('editor');\nconsole.log('yay');\n// let editor = new Editor(editorElement, submitFunc);\n\n// let n = 10\n// let randomVecList = Array(n).fill(0).map((e, i) => (new Vec(i/n*360)).mult(0.5));\n// let stroke = new Stroke(toSegs(randomVecList), true);\n// stroke.rotate(10)\n// stroke.trans(new Vec(0.2, 0.0))\n// stroke.draw(ctx);\n\n// function addDictionaryStrokes(list){\n//     for (let entry of list){\n//         let {name, ...spec} = entry;\n//         addStroke(name, new StrokeSpec(spec));\n//     }\n// }\n\n// let list = [\n//     {name: 'heng', id:0, angle: 180, curv:  0.05, shape: 0.35, twist: -1},\n//     {name: 'shu',  id:1, angle: -90, curv: 0.02, shape: 0.35, twist: 1},\n//     {name: 'dian', id:2, angle: -135, curv: 0.2, ratio:0.5},\n//     {name: 'pie',  id:3, angle: -80, curv: 0.3, twist: 1, shape: -0.5},\n//     {name: 'gou',  id:4, angle: 30, curv: -0.3, ratio:0.3, twist: 1, shape: -0.5},\n// ]\n\n// addDictionaryStrokes(list);\n\n// let variables = {\n//     hengScale: {val: 1.0, min: 0.9, max: 1.1, def: 1.0}\n// }\n\n// let program = [\n//     {opname: 'addStroke', name:'shu'},\n//     {opname: 'splitByStroke'},\n//     {opname: 'addStroke', name:'shu', path:[1]},\n// ]\n\n// sketch.exec(program);\n\n// sketch.draw(ctx);\n"],"sourceRoot":""}