{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/CanvasExtend.js","webpack:///./src/List.js","webpack:///./src/Main.js","webpack:///./src/Radical.js","webpack:///./src/Seg.js","webpack:///./src/Segs.js","webpack:///./src/Stroke.js","webpack:///./src/Torque.js","webpack:///./src/Vec.js"],"names":["CanvasRenderingContext2D","prototype","lineToVec","vec","lineTo","x","y","moveToVec","moveTo","bezierCurveTo","cv1","cv2","ev","point","v","undefined","dpr","window","devicePixelRatio","ratio","canvas","height","beginPath","arc","Math","PI","fill","drawSegs","segs","head","mult","seg","tail","stroke","console","log","drawContours","contours","contour","closePath","text","fontsize","save","font","textAlign","textBaseline","fillText","restore","drawBound","vecs","num","r","g","b","centroid","toPolyCentroid","fillStyle","drawZig","List","Array","constructor","args","most","slice","last","length","sum","sumFunc","e","reduce","acc","n","same","func","every","i","a","accum","accumFunc","concat","copy","map","zip","newList","_e","Error","list","assert","Number","isInteger","listMapped","document","createElement","ctx","getContext","width","style","getElementById","appendChild","translate","scale","tes","len","range","vecsCircles","Vec","push","Segs","fromVecs","flip","poly","Radical","polyCopy","shrink","testShrink","vecsCircle","vecsLine","stroke1","Stroke","stroke2","enter","cutEnter","cutGoing","cuts","cutLeave","poly1","poly2","poly3","poly4","trans","draw","segsLine","testCut","seg1","Seg","seg2","seg3","intersect","edges","circles","circle","area","cut","shratio","testCentroid","add","testRadical","radical","stroke3","addStroke","testCutUndo","counters","undoCutThrough","undoCut","splice","closeContours","strokes","equal","conn","union","contourLabels","first","restLabels","unioned","label","split","splitted","unionedContour","sub","center","iadd","neg","bisecs","bisec","angleBisect","j","color","strokeStyle","index","entries","abs","segIntersect","head1","tail1","head2","tail2","h1h2","h1t1","h2t2","detT","cross","detU","detS","t","u","p","d","hd","tl","diff","mag","dir","norm","lerp","rotate","angle","irotate","imult","torque","Torque","mass","that","thisDir","thatDir","dot","sign","error","reverse","temp","pop","lens","other","intersects","partialSums","component","crosses","transVec","headOffset","pointAt","given","ithSeg","lenInSeg","tan","notch","notchPrev","cutThrough","splitPrev","result","cutThroughRing","ringSegs","splittedRingSegs","thereIsStillNotch","next","thatSlice","product","toProduct","intersectHead","cutterSeg","EPSILON","con","sort","intersectTail","intersectSeg","segList","closed","displayed","joint","thisPos","thatPos","unshift","entered","cutter","nextCutter","headIntersects","tailIntersects","left","right","attr","ang","cos","sin","isub","polar","ipolar","iscale","about","theta","rad","hypot","atan2","isNaN","addAttr","setAttr","attrObject","Object","assign","removeAttr","attrKey","JSON","parse","stringify","toArray"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Main.js\");\n","CanvasRenderingContext2D.prototype.lineToVec = function(vec){\n    this.lineTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.moveToVec = function(vec){\n    this.moveTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.bezierCurveTo = function(cv1, cv2, ev){\n    this.bezierCurveTo(cv1.x, cv1.y, cv2.x, cv2.y, ev.x, ev.y);\n}\n\n\nCanvasRenderingContext2D.prototype.point = function(v){\n\n    if (v != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.beginPath()\n        this.arc(v.x*ratio, v.y*ratio, 1.8, 0, Math.PI*2);\n        this.fill();\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawSegs = function(segs){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        this.beginPath();\n        this.moveToVec(segs[0].head.mult(ratio));\n        for (let seg of segs){\n            this.lineToVec(seg.tail.mult(ratio));\n        }\n        this.stroke();\n    } catch {\n        console.log('Illegal line segs: ', segs);\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawContours = function(contours){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        for (let contour of contours){\n            this.moveToVec(contour[0].head.mult(ratio));\n            for (let seg of contour){\n                this.lineToVec(seg.tail.mult(ratio));\n            }\n            this.closePath();\n        }\n    } catch {\n        console.log('Illegal line segs: ', contours);\n    }\n}\n\n\nCanvasRenderingContext2D.prototype.text = function(text, vec, fontsize){\n\n    this.save();\n    this.font = `${fontsize ? fontsize : 10}px Helvetica`;\n    this.textAlign = 'center';\n    this.textBaseline = 'middle';\n    if (vec != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.fillText(text, vec.x*ratio, vec.y*ratio);\n    }\n    this.restore();\n}\n\nCanvasRenderingContext2D.prototype.drawBound = function(vecs, num, {r, g, b}){\n\n    let centroid = toPolyCentroid(vecs);\n    if (num !== undefined){\n        this.save();\n        this.fillStyle = 'rgb(128, 0, 0, 0.3)';\n        this.text(num, centroid);\n        this.restore();\n    } else {\n        this.point(centroid);\n    }\n\n    this.fillStyle = `rgba(${r*128}, ${g}, ${b}, 0.1)`;\n    this.beginPath();\n    this.drawZig(vecs);\n    this.closePath();\n    this.fill();\n}\n","// Extended JavaScript native Array class with handy methods.\n\nexport default class List extends Array {\n    constructor(...args){\n        super(...args);\n    }\n\n    most(){\n        return this.slice(0, -1);\n    }\n\n    last(){\n        return this[this.length - 1];\n    }\n\n    sum(sumFunc=(e)=>e) {\n        return this.reduce((acc, n) => acc + sumFunc(n), 0);      \n    }\n\n    same(func=(e) => e){\n        return this.every((v, i, a) => func(v) === func(a[0]));\n    }\n\n    accum(accumFunc=(e)=>e){\n        return this.reduce((acc, x) => acc.concat(acc.last() + accumFunc(x)), [0])\n    }\n\n    // copy the list, and try to clone the elements if\n    // a copy method exists.\n    copy(){\n        return this.map(e => e.copy ? e.copy() : e);\n    }\n\n    zip(func=(e)=>e){\n        if((this[0].length) && (this[0].length > 0) && this.same(e => e.length)){\n            let newList = this[0].map((_e, i) => {\n                return func(this.map(e => e[i]));\n            })\n            return new List(...newList);\n        } else throw Error('Invalid array dimension for zipping');\n    }\n}\n\n(() => {\n    let list = new List(1,2,3);\n    console.assert(list[0]===1 && list.length===3, 'List: Constructor failed');\n    console.assert(list.sum(e=>e*2)===12, 'List: sum failed');\n    console.assert(list.same(e=>Number.isInteger(e)), 'List: same failed');\n\n    let listMapped = list.map(e => [e, e*2]);\n    console.assert(listMapped.zip().last().sum()==12, 'List: zip failed');\n})();","import './CanvasExtend';\n\nimport Vec from './Vec';\nimport List from './List';\nimport Segs from './Segs';\nimport Radical from './Radical';\nimport Stroke from './Stroke';\nimport Seg from './Seg';\n\nlet canvas = document.createElement('canvas'),\n    ctx = canvas.getContext('2d'),\n    dpr = window.devicePixelRatio;\n\ncanvas.width  = 400 * dpr;\ncanvas.height = 400 * dpr;\ncanvas.style.width  = 400;\ncanvas.style.height = 400;\ndocument.getElementById('canvas-container').appendChild(canvas);\nctx.translate(canvas.width/2, canvas.height/2);\nctx.scale(dpr, dpr);\n\nfunction tes(){\n    let len  = 19, range = 5;\n    let vecsCircles = new List(0);\n    for (let r = 0; r < 6; r++){\n\n        let vecs = Array(len).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.8 * (r+1) / range));\n\n        vecsCircles.push((new Segs(0)).fromVecs(vecs));\n\n        if(r % 2 === 1){\n            console.log(vecsCircles[r]);\n            vecsCircles[r].flip();\n        }\n    }\n\n    let poly = new Radical(vecsCircles),\n        polyCopy = poly.copy();\n    console.log(poly)\n    poly.shrink(0.05, ctx);\n    // polyCopy.draw(ctx);\n    // poly.draw(ctx);\n}\n// testRadical();\n\nfunction testShrink(){\n    let len  = 12;\n    let vecsCircle =(new List(len)).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.5));\n    let vecsLine = Array(len).fill(0).map((e, i)=> new Vec( i/(6-1)*2 - 1, 0.3) );\n\n    // let poly1 = new Radical([(new Segs(0).fromVecs(vecsCircle))]);\n\n    let stroke1 = new Stroke((new Segs(0)).fromVecs(vecsCircle), true),\n        stroke2 = new Stroke(new Segs(0).fromVecs(vecsLine));\n\n    let enter = 3;\n    stroke1.segs.cutEnter(enter, 0.5);\n    stroke1.segs.cutGoing(enter+1, new Vec(0.1, 0));\n    stroke1.segs.cutGoing(enter+2, new Vec(-0.1, 0));\n    let cuts = stroke1.segs.cutLeave(enter+3, 14, 0.5);\n    console.log(cuts[0].map(e=>e.head),'cutresult');\n    let poly1 = new Radical(new List(cuts[0])),\n        poly2 = new Radical(new List(cuts[1])),\n        poly3, poly4;\n\n\n    poly1 = poly1.copy();\n    poly2 = poly2.copy();\n    poly1.trans(new Vec(-0.15, 0.1));\n    poly2.trans(new Vec(0.15, -0.1));\n    poly3 = poly1.copy();\n    poly4 = poly2.copy();\n    poly1.shrink(0.05);\n    poly2.shrink(0.05);\n\n    console.log(poly1, poly2);\n    poly1.draw(ctx, true);\n    poly2.draw(ctx, true);\n    poly3.draw(ctx);\n    poly4.draw(ctx);\n\n    // stroke1.draw(ctx);\n    // stroke2.draw(ctx);\n\n    // segs1.flip();\n    // console.assert(segs1[0].head === segs2.last().tail, 'Segs: flip error');\n\n    let segsLine = new Segs(vecsLine);\n    // console.log(segsLine.torque().center);\n}\n// testShrink();\n\nfunction testCut(){\n\n    let seg1 = new Seg(new Vec(0, 0), new Vec(0, 1)),\n        seg2 = new Seg(new Vec(0, 0), new Vec(1, 0)),\n        seg3 = new Seg(new Vec(-1, 0), new Vec(2, 0));\n\n    console.log(seg1.intersect(seg2));\n    console.log(seg1.intersect(seg3));\n\n    let edges  = 4,\n        circles = new List(0);\n    for (let i = 0; i < 4; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.2)),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n    }\n    let poly = new Radical(circles);\n\n    let len = 14,\n        width = 0.6;\n    for (let i = 0; i < 4; i++){\n        let vecsLine = [new Vec(-0.2 *(i+1), i*0.05), new Vec(0, i*0.05), new Vec(0.2 * (i+1), i*0.05)];\n        let stroke = new Stroke(new Segs(0).fromVecs(vecsLine));\n        poly.contours = stroke.cut(poly.contours);\n        poly = poly.copy();\n        stroke.draw(ctx, false);\n    }\n\n    let shratio = -0.02;\n    poly = poly.copy();\n    poly.shrink(shratio);\n    poly.draw(ctx, true, '#34567888');\n    \n}\n// testCut();\n\nfunction testCentroid(){\n    let edges = 4,\n        circles = new List(0);\n    for (let i = 0; i < 5; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.1).add(new Vec(i*0.05, 0))),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n\n    }\n    let poly = new Radical(circles);\n\n    poly.draw(ctx, true)\n}\n// testCentroid();\nfunction testRadical(){\n    let radical = new Radical();\n\n    let stroke1 = new Stroke(new Segs(0).fromVecs([new Vec(-0.4, 0.4), new Vec(0.4, 0.4)])),\n        stroke2 = new Stroke(new Segs(0).fromVecs([new Vec(0.4, -0.4), new Vec(0.3, 0), new Vec(0.4, 0.4)])),\n        stroke3 = new Stroke(new Segs(0).fromVecs([new Vec(0.4, -0.4), new Vec(0.4, 0.4)]));\n    radical.addStroke(stroke1, [0]);\n    radical.addStroke(stroke2, [0, 1]);\n    radical.addStroke(stroke3, [0, 2]);\n    radical.shrink(-0.02);\n    radical.draw(ctx, false);\n    console.log(radical.contours);\n}\ntestRadical();\nfunction testCutUndo(){\n    let edges = 6;\n    let circles = [];\n    for (let i = 0; i < 1; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.8+i*0.3).add(new Vec(i*0.05, 0))),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        // if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n\n    }\n    let poly = new Radical(circles);\n\n    let stroke = new Stroke(new Segs(0).fromVecs([new Vec(-0.4, 0.4), new Vec(0, 0), new Vec(0.4, 0.3)]))\n    poly.counters = stroke.cut(poly.contours);\n    poly.counters[0].undoCutThrough(poly.counters[1]);\n    poly.counters[0].undoCut();\n    poly.counters.splice(1, 1);\n    console.log(poly.counters);\n    // poly.shrink(-0.02);\n    // stroke.draw(ctx);\n    poly.draw(ctx, true)\n}\n// testCutUndo()\n","import List from './List';\nimport Segs from './Segs';\nimport Seg from './Seg';\nimport Vec from './Vec';\n\nexport default class Radical {\n    constructor(contours){\n\n        if (contours === undefined){\n            contours = new List((new Segs(0)).fromVecs([new Vec(-1, -1), new Vec(1, -1), new Vec(1, 1), new Vec(-1, 1)]))\n        }\n\n        this.contours = contours;\n        this.closeContours();\n\n        this.strokes = [];\n    }\n\n    closeContours(){\n        for (let contour of this.contours){\n\n            if(!contour.last().tail.equal(contour[0].head)){\n                let conn = new Seg(contour.last().tail, contour[0].head);\n                contour.push(conn); \n            } else {\n                contour.last().tail = contour[0].head;\n            }\n        }\n    }\n\n    union(contourLabels) {\n        if(contourLabels.length === 1){\n            return this.contours[contourLabels[0]].copy();\n        } else if (contourLabels.length > 1){\n            let contours = this.contours.copy(),\n                [first, ...restLabels] = contourLabels,\n                unioned = contours[first].copy();\n            \n            // console.log(JSON.stringify(contourLabels.map(e => contours[e]), null, 2));\n            for (let label of restLabels){\n                unioned.undoCutThrough(contours[label]);\n                unioned.undoCut();\n            }\n            // console.log(unioned, 'unioned');\n            return unioned;\n        } else throw Error('Radical union: YOU MUST EXPLICITLY SPECIFY THE LABELS OF CONTOURS TO BE UNIONED')\n    }\n\n    split(stroke, contourLabels){\n\n    }\n\n    addStroke(stroke, unioned=[], splitted=[]){\n\n        // 1. get the union of contours and calculate the place;\n        //    where the stroke will be put.\n        let unionedContour = this.union(unioned)\n        stroke.trans(unionedContour.centroid().sub(stroke.center()));\n        // console.log('addStroke unioned', unionedContour);\n        if (splitted.length === 0){\n            this.contours = stroke.cut(this.contours).copy();\n            // console.log('addstroke', this.contours)\n            this.closeContours();\n        } else {\n            // if to split specified\n        }\n\n        this.strokes.push(stroke);\n    }\n\n    copy(){\n        let poly = new Radical(this.contours.copy());\n        // poly.close();\n        return poly;\n    }\n\n    trans(vec){\n        for (let contour of this.contours){\n            contour.trans(vec);\n            contour.last().tail.iadd(vec.neg());\n        }\n    }\n\n    \n    shrink(shrink){\n\n        let bisecs = new List(0);\n        for (let contour of this.contours){\n            bisecs.push([]);\n            for (let i = 0; i < contour.length; i++){\n                let last = (i === 0) ? contour.length - 1 : i - 1;\n                let bisec = contour[last].angleBisect(contour[i]);\n                bisecs.last().push(bisec.mult(shrink));\n            }\n        }\n\n        for (let i = 0; i < this.contours.length; i++){\n            let contour = this.contours[i];\n            for (let j = 0; j < contour.length; j++){\n                contour[j].head.iadd(bisecs[i][j]);\n            }\n        }\n    }\n\n    draw(ctx, stroke, color='rgb(0, 0, 0, 0.1)'){\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle=color;\n        ctx.beginPath();\n        ctx.drawContours(this.contours);\n        ctx.fill();\n        if(stroke)\n        ctx.stroke();\n\n        ctx.save();\n        ctx.fillStyle='rgb(0, 0, 0, 0.2)'\n        for (let i = 0; i < this.contours.length; i++){\n            let contour = this.contours[i];\n            for (let [index, seg] of contour.entries()){\n                if(stroke)\n                    ctx.text(index, seg.head);\n                else\n                    ctx.point(seg.head);\n            }\n            // ctx.point(contour.centroid());\n            ctx.text(i, contour.centroid(), Math.abs(contour.area())*80);\n        }\n        ctx.restore();\n\n        ctx.save();\n        for (let stroke of this.strokes){\n            stroke.draw(ctx);\n        }\n        ctx.restore();\n    }\n\n}\n\n","// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n// \n// note that:\n// |x1-x3 x3-x4|\n// |           | (determinant) is equivalent to\n// |y1-y3 y3-y4|\n// \n// cross((x1-x3, y1-y3), (x3-x4, y3-y4)), or\n// \n// cross(P1-P3, P3-P4)\n\nfunction segIntersect(head1, tail1, head2, tail2){\n    let h1h2 = head1.sub(head2),\n        h1t1 = head1.sub(tail1),\n        h2t2 = head2.sub(tail2),\n        detT = h1h2.cross(h2t2),\n        detU = h1t1.cross(h1h2),\n        detS = h1t1.cross(h2t2),\n        t = detT/detS,\n        u = -detU/detS,\n        p = head1.add(tail1.sub(head1).mult(t)),\n        d = detS;\n    \n    return {t, u, p, d}\n}\n\nimport Vec from './Vec';\nimport Torque from './Torque';\n\nexport default class Seg {\n    constructor(hd, tl){\n        this.head = hd;\n        this.tail = tl;\n    }\n\n    diff (){\n        return this.tail.sub(this.head);\n    }\n\n    len (){\n        return this.tail.sub(this.head).mag();\n    }\n\n    dir (){\n        return this.tail.sub(this.head).norm();\n    }\n\n    lerp(ratio){\n        return this.head.add(this.tail.sub(this.head).mult(ratio));\n    }\n\n    trans(vec){\n        this.head.iadd(vec);\n        this.tail.iadd(vec);\n    }\n\n    rotate(angle){\n        this.head.irotate(angle);\n        this.tail.irotate(angle);\n    }\n\n    scale(mag){\n        this.head.imult(mag);\n        this.tail.imult(mag);\n    }\n\n    torque(){\n        return new Torque({center:this.lerp(0.5), mass: this.len()});\n    }\n\n    intersect(that){\n        return segIntersect(this.head, this.tail, that.head, that.tail);\n    }\n\n    cross(){\n        return this.head.cross(this.tail);\n    }\n\n    // the previous one connect with the \n    angleBisect(that){\n        if(that.head == this.tail){\n            \n            let thisDir = this.dir().neg(),\n                thatDir = that.dir();\n\n            if(thisDir.cross(thatDir) === 0){\n                if (thisDir.dot(thatDir) > 0){\n                    return thisDir;\n                } else {\n                    return new Vec(-thisDir.y, thisDir.x);\n                }\n            } else {\n                return thisDir.add(thatDir).mult(Math.sign(thisDir.cross(thatDir))).norm();\n            }\n\n\n        } else console.error('angleBisector is only permitted if two segs share same vec', this, that);\n    }\n\n    reverse(){\n        let temp = this.head;\n        this.head = this.tail;\n        this.tail = temp;\n    }\n\n    copy(){\n        return new Seg(this.head.copy(), this.tail.copy());\n    }\n}","import List from './List';\nimport Seg from './Seg';\nimport Vec from './Vec';\nimport Torque from './Torque';\n\nexport default class Segs extends List {\n    constructor(...segs){\n        super(...segs);\n    }\n\n    conn(){\n        for (let i = 0; i < this.length - 1; i++){\n            this[i+1].head = this[i].tail;\n        }\n    }\n\n    area(){\n        return this.map(seg => seg.cross()).sum()/2;\n    }\n\n    centroid(){\n        if (this.length > 0){\n            let area = this.area();\n            return this\n            .map(e => e.head.add(e.tail).mult(e.cross() / (6 * area)))\n            .reduce((acc, e) => acc.add(e), new Vec(0, 0));\n        } else {\n            return undefined;\n        }\n    }    \n\n    fromVecs(vecs){\n        let list = new List(vecs.slice(0, -1), vecs.slice(1))\n        .zip(e=>new Seg(...e));\n\n        while(list.length > 0){\n            this.push(list.pop());\n        }\n        this.reverse();\n        return this;\n    }\n\n    flip(){\n        this.reverse();\n        for (let seg of this){\n            seg.reverse();\n        }\n    }\n\n    lens(){\n        let lens = new List(0);\n        for (let seg of this){\n            lens.push(seg.len());\n        }\n        return lens;\n    }\n\n    intersect(other){\n        let intersects = new List(0)\n        for (let seg of this){\n            intersects.push(other.intersect(seg));\n        }\n    }\n\n    partialSums(component){\n        let sum = [];\n        for (let seg of this){\n            sum.push(seg.head[component]+seg.tail[component]);\n        }\n        return sum;\n    }\n\n    crosses(){\n        let crosses = [];\n        for(let seg of this){\n            crosses.push(seg.head.cross(seg.tail))\n        }\n    }\n\n    trans(transVec){\n        for (let seg of this){\n            console.log('yay', transVec);\n            seg.head.iadd(transVec);\n        }\n        this.last().tail.iadd(transVec);\n    }\n\n    rotate(angle){\n        let headOffset = this[0].head.copy();\n        this.trans(headOffset.neg());\n        for (let seg of this){\n            seg.tail.irotate(angle);\n        }\n        this.trans(headOffset);\n    }\n\n    scale(ratio){\n        let headOffset = this.segs[0].head.copy();\n        this.trans(headOffset.neg());\n        for (let seg of this){\n            seg.tail.imult(ratio);\n        }\n        this.trans(headOffset);\n    }\n\n    pointAt(ratio){\n        let lens = this.lens(),\n            accum = lens.accum(),\n            given = accum.last() * ratio;\n\n        var ithSeg = 0,\n            lenInSeg = 0;\n        for (let [index, len] of accum.entries()){\n            if (given < len) {\n                ithSeg = index - 1;\n                lenInSeg = len - given;\n                break;\n            }\n        }\n\n        return {\n            point: this[ithSeg].lerp(1 - lenInSeg/lens[ithSeg]),\n            tan: this[ithSeg].dir()\n        };\n    }\n\n    cutEnter(notch, ratio){\n        \n        let seg = this[notch],\n            lerp = seg.lerp(ratio),\n            tail = seg.tail;\n\n        seg.tail = lerp;\n        this.splice(notch+1, 0, new Seg(lerp, tail));\n    }\n\n    cutGoing(notchPrev, point){\n        let seg = this[notchPrev];\n        this.splice(notchPrev+1, 0, new Seg(seg.tail, point), new Seg(point, seg.tail.copy()));\n        this[notchPrev+2].head = this[notchPrev+1].tail;\n    }\n\n    cutThrough(notchPrev, splitPrev){\n\n        let result = [];\n        if (notchPrev < splitPrev){\n            console.log('notch - split - 0')\n            result = [this.slice(notchPrev, splitPrev), this.slice(0, notchPrev+1).concat(this.slice(splitPrev))];\n        } else if (notchPrev > splitPrev){\n            console.log('notch - 0 - split')\n            result = [this.slice(notchPrev).concat(this.slice(0, splitPrev)), this.slice(splitPrev, notchPrev)];\n        } else throw Error('its impossible to have same notchPrev and splitPrev', notchPrev, splitPrev);\n\n        return result;\n    }\n\n    cutThroughRing(notchPrev, splitPrev, ringSegs){\n        let splittedRingSegs = [...ringSegs.slice(splitPrev), ...ringSegs.slice(0, splitPrev+1)];\n        return new Segs(...[...this.slice(0, notchPrev+1), ...splittedRingSegs, ...this.slice(notchPrev)]);\n    }\n\n    undoCut(){\n        let thereIsStillNotch = true;\n        while(thereIsStillNotch) next:{\n            for (let i = 0; i < this.length-1; i++){\n                if (this[i].head.equal(this[i+1].tail) && this[i].tail.equal(this[i+1].head)){\n                    console.log(i, 'undo')\n                    this.splice(i, 2);\n                    console.log(this, this[i-1]);\n                    this[i].head = this[i-1].tail;\n                    break next;\n                }\n            }\n            thereIsStillNotch = false;\n        }\n    }\n\n    undoCutThrough(that){\n        for (let i = 0; i < this.length; i++){\n            for (let j = 0; j < that.length; j++){\n                if (this[i].head.equal(that[j].tail) && this[i].tail.equal(that[j].head)){\n                    let thatSlice = [...that.slice(j+1), ...that.slice(0, j)];\n                    console.log('encountered', thatSlice);\n                    this.splice(i+1, ...thatSlice);\n                    return;\n                }\n            }\n        }\n    }\n\n    torque(){\n        let product = new Vec();\n        for (let seg of this){\n            product.iadd(seg.torque().toProduct());\n        }\n        let mass = this.lens().sum();\n        let center = product.mult((this.length === 0) ? 0 : 1/mass);\n\n        return new Torque({center, mass});\n    }\n\n    copy(){\n        // console.log(this);\n        let segs = this.map(seg => seg.copy ? seg.copy() : seg);\n        for (let i = 0; i < segs.length - 1; i++){\n            segs[i].tail = segs[i+1].head;\n        }\n        return segs;\n    }\n}","import Seg from './Seg';\nimport List from './List';\n\nfunction intersectHead(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, d} = cutterSeg.intersect(segs[seg]);\n            if ( t < EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => b.t - a.t)\n    // console.log(intersects, 'headIntersects')\n    return intersects;\n}\n\nfunction intersectTail(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, p, d} = cutterSeg.intersect(segs[seg]);\n            if ( t > 1 - EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, p, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => a.t - b.t)\n    // console.log(intersects, 'tailIntersects')\n    return intersects;\n}\n\n// return intersections between all contours of poly, and\n// the given seg, sorted by t parameter.\nfunction intersectSeg(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, d} = cutterSeg.intersect(segs[seg]);\n            if ( t < 1-EPSILON && t > EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => a.t - b.t)\n    \n    return intersects;\n}\n\nexport default class Stroke {\n    constructor(segList, closed){\n        this.segs = segList;\n\n        if (closed){\n            this.closed = true;\n            let conn = new Seg(this.segs.last().tail.copy(), this.segs[0].head.copy());\n            this.segs.push(conn); \n        }\n        \n        this.displayed = this.segs.copy();\n    }\n\n    trans(vec){\n        this.segs.trans(vec);\n        this.displayed = this.segs.copy();\n    }\n\n    joint(that, {thisPos, thatPos}){\n        if (thisPos === 1){\n            this.segs.push(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        } else if (thisPos === 0){\n            this.segs.unshift(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        }\n        this.displayed = this.segs.copy();\n    }\n\n    draw(ctx, stroke){\n        ctx.strokeStyle = 'black';\n        ctx.beginPath();\n        ctx.drawSegs(this.displayed);\n        ctx.stroke();\n    \n        ctx.save();\n        ctx.fillStyle = \"rgb(0, 0, 0, 0.2)\";\n        for (let [index, seg] of this.segs.entries()){\n            if(stroke)\n                ctx.text(index, seg.head);\n            else\n                ctx.point(seg.head);\n        }\n\n        ctx.restore();\n    }\n\n    center(){\n        return this.segs.torque().center;\n    }\n\n    cut(contours){\n\n        let entered, notchPrev, splitPrev;\n\n        for (let cutter = 0; cutter < this.segs.length; cutter++) nextCutter:{\n            let cutterSeg = this.segs[cutter];\n\n            if(cutter===0){\n                let headIntersects = intersectHead(cutterSeg, contours);\n                if (headIntersects.length > 0){\n                    let {t, con, d} = headIntersects[0];\n                    console.log('head', con, t, d);\n                    if (d < 0) cutterSeg.head.iadd(cutterSeg.diff().mult(t-0.01));\n                }\n            }\n\n            if(cutter === this.segs.length - 1){\n                let tailIntersects = intersectTail(cutterSeg, contours);\n                if (tailIntersects.length > 0){\n                    let {t, con, d, p} = tailIntersects[0];\n                    if (d > 0) cutterSeg.tail.iadd(p.sub(cutterSeg.tail).mult(t));\n                }\n            }\n\n            if(entered !== undefined){\n                // console.log(entered, contours);\n                contours[entered].cutGoing(notchPrev, cutterSeg.head);\n                notchPrev += 1;\n            }\n\n            // find the intersections bettwen the segment from cutter\n            // stroke and from all contours. Sort them by the distance\n            // bettwen the intersection to the head of cutter segment.\n            while(true){\n                let intersects = intersectSeg(cutterSeg, contours);\n                if (intersects.length === 0) break;\n\n                let {u, d, con, seg} = intersects[0];\n                if (entered === undefined){\n                    console.log('entered', con);\n                    entered = con;\n                    notchPrev = seg;\n                    contours[entered].cutEnter(notchPrev, u);\n                } else {\n\n                    splitPrev = seg;\n                    if (entered === con) {\n                        console.log('cutting through self');\n                        contours[entered].cutEnter(splitPrev, u);\n                        notchPrev += notchPrev > splitPrev ? 1: 0;\n    \n                        let [left, right] = contours[entered].cutThrough(notchPrev+1, splitPrev+1);\n                        contours.splice(con, 1, left, right);\n                    } else {\n                        console.log('cutting through ring', con);\n                        contours[con].cutEnter(splitPrev, u);\n                        contours[entered] = contours[entered].cutThroughRing(notchPrev+1, splitPrev+1, contours[con]);\n                        contours.splice(con, 1);\n                    }\n                    entered = undefined;\n                    // console.log('contours', contours);\n                }    \n            }\n        }\n\n        return contours;\n        // console.log(contours);\n   }\n\n}","export default class Torque{\n    constructor({center, mass}){\n        // console.log(\"new torque\", center, mass)\n        this.center = center ? center : new Vec(0, 0);\n        this.mass = (mass !== undefined) ? mass : 0;\n    }\n\n    toProduct(){\n        return this.center.mult(this.mass);\n    }\n}","const EPSILON = 1e-6;\n\nexport default class Vec{\n    /**\n     * Simple Vector class.\n     * \n     * @param {any} x \n     * @param {any} y \n     */\n    constructor(x, y, attr){\n        if(attr === undefined){\n            this.attr = {};\n\n            if (y === undefined){\n                if(x === undefined) {\n\n                    // For nothing given, new vec created\n                    \n                    this.x = 0;\n                    this.y = 0;\n                } else if (x.x !== undefined && x.y !== undefined){\n\n                    // if argument given as {x:1, y:1}\n                    \n                    this.x = x.x;\n                    this.y = x.y;\n                } else if (x.len !== undefined && x.ang !== undefined){\n\n                    // if argument given as {len: 1, ang: 0}\n\n                    this.x = x.len * Math.cos(x.ang*Math.PI/180);\n                    this.y = x.len * Math.sin(x.ang*Math.PI/180);\n                } else if (typeof x === 'number'){\n\n                    // if x is a number \n\n                    this.x = Math.cos(x*Math.PI/180);\n                    this.y = Math.sin(x*Math.PI/180);\n                }\n            } else {\n                this.x = x;\n                this.y = y;\n            }\n        } else {\n            this.attr = attr;\n            this.x = x;\n            this.y = y;\n        }\n\n        \n    }\n\n    equal(vec){\n        return Math.abs(this.x - vec.x) < EPSILON && Math.abs(this.y - vec.y) < EPSILON;\n    }\n\n    /**\n     * \n     * @param {Vec} vec another vec to be added\n     * @returns {Vec}\n     */\n    add(vec){\n        return new Vec(this.x + vec.x, this.y + vec.y);\n    }\n\n    iadd(vec){\n        this.x += vec.x;\n        this.y += vec.y;\n    }\n    /**\n     * \n     * @param {Vec} vec another vec to be subtracted\n     * @returns {Vec}\n     */\n    sub(vec){\n        return new Vec(this.x - vec.x, this.y - vec.y);\n    }\n\n    isub(vec){\n        this.x -= vec.x;\n        this.y -= vec.y;\n    }\n\n    /**\n     * \n     * @param {Vec, number} vec can be either a vec or a scalar. If it's a scalar,\n     *                          then times it both to x and y.\n     * @returns {Vec}\n     */\n    mult(vec){\n        if(vec.x === undefined){\n            return new Vec(this.x * vec, this.y * vec);\n        } else {\n            return new Vec(this.x * vec.x, this.y * vec.y);\n        }\n    }\n\n    imult(vec){\n        if(vec.x === undefined){\n            this.y *= vec;\n            this.x *= vec;\n        } else {\n            this.x *= vec.x;\n            this.y *= vec.y;\n        }\n    }\n\n    /**\n     * transform point in polar manner. returns a new vector relative\n     * to this one.\n     * @param {number} len length\n     * @param {number} ang angle in degree\n     */\n    polar(vec){\n        return new Vec(\n            this.x + vec.len * Math.cos(vec.ang * Math.PI/180),\n            this.y + vec.len * Math.sin(vec.ang * Math.PI/180)\n        )\n    };\n\n    ipolar(vec){\n        this.x += vec.len * Math.cos(vec.ang * Math.PI/180);\n        this.y += vec.len * Math.sin(vec.ang * Math.PI/180);\n    }\n\n    iscale(ratio, about){\n        // console.log(this, ratio, about, \"iscale\");\n        this.isub(about);\n        this.imult(ratio);\n        this.iadd(about);\n    }\n\n        /**\n     * rotate\n     * @param {number} theta angle to rotate in degree.\n     */\n    rotate(theta){\n\n        switch(theta){\n            case 90     : return new Vec(-this.y, this.x);\n            case -90    : return new Vec(this.y, -this.x);\n            case 180    : \n            case -180   : return new Vec(-this.x, -this.y);\n            default: \n                let rad = theta / 180 * Math.PI,\n                sin = Math.sin(rad),\n                cos = Math.cos(rad);\n\n            return new Vec(\n                this.x * cos - this.y * sin,\n                this.x * sin + this.y * cos\n            )\n        }\n\n    }\n\n    irotate(theta){\n        let vec = this.rotate(theta);\n        this.x = vec.x;\n        this.y = vec.y;\n    }\n\n    neg(){\n        return new Vec(-this.x, -this.y);\n    }\n\n    /**\n     * returns the cross product between this and vec.\n     * also is the result of det\n     * \n     * |this.x   that.x|\n     * |               |\n     * |this.y   that.y|\n     * \n     * also, this can be used for determining which side\n     * does the \"that\" vector resides, left or right.\n     * When the cross product is positive, the \"that\" is\n     * on LEFT of this vector.\n     * \n     * @param {Vec} that another vector\n     */\n    cross(that){\n        return this.x * that.y - that.x * this.y;\n    }\n\n    dot(that){\n        return this.x * that.x + this.y * that.y;\n    }\n \n    mag(){\n        return Math.hypot(this.x, this.y);\n    }\n\n    norm(){\n        let mag = this.mag();\n        return this.mult(mag === 0 ? 0 : 1/mag);\n    }\n\n    angle(){\n        return Math.atan2(this.y, this.x) / Math.PI * 180;\n    }\n\n    isNaN(){\n        return (isNaN(this.x) || isNaN(this.y));\n    }\n\n    addAttr(attr){\n        this.attr.push(attr);\n    }\n\n    /**\n     * Set attribute to Vector. overwrite existing attributes.\n     * @param {object} attrObject \n     */\n    setAttr(attrObject){\n        return Object.assign(this.attr, attrObject);\n    }\n\n    removeAttr(attrKey){\n        this.attr[attrKey] = undefined;\n    }\n\n    /**\n     * copy: duplicate an object instance of this.\n     * @returns {Vec}\n     */\n    copy(){\n        return new Vec(this.x, this.y, JSON.parse(JSON.stringify(this.attr)));\n    }\n\n    toArray(){\n        return [this.x, this.y];\n    }\n\n    draw(ctx){\n        ctx.save();\n\n        ctx.strokeStyle = 'gray';\n        ctx.point(this);\n    \n        ctx.restore();\n    }\n}"],"sourceRoot":""}