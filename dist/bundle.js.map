{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/CanvasExtend.js","webpack:///./src/List.js","webpack:///./src/Main.js","webpack:///./src/Radical.js","webpack:///./src/Seg.js","webpack:///./src/Segs.js","webpack:///./src/Stroke.js","webpack:///./src/Torque.js","webpack:///./src/Vec.js"],"names":["CanvasRenderingContext2D","prototype","lineToVec","vec","lineTo","x","y","moveToVec","moveTo","bezierCurveTo","cv1","cv2","ev","point","v","undefined","dpr","window","devicePixelRatio","ratio","canvas","height","beginPath","arc","Math","PI","fill","drawSegs","segs","head","mult","seg","tail","stroke","console","log","drawContours","contours","contour","closePath","text","fontsize","save","font","textAlign","textBaseline","fillText","restore","drawBound","vecs","num","r","g","b","centroid","toPolyCentroid","fillStyle","drawZig","List","Array","constructor","args","most","slice","last","length","rest","sum","same","e","Error","Cons","func","acc","n","add","reduce","every","i","a","accum","accumFunc","concat","from","transpose","newList","map","_e","diff","diffFunc","list","copy","document","createElement","ctx","getContext","width","style","getElementById","appendChild","translate","scale","tes","len","range","vecsCircles","Vec","push","Segs","fromVecs","flip","poly","Radical","polyCopy","testShrink","vecsCircle","vecsLine","stroke1","Stroke","stroke2","enter","cutEnter","cutGoing","cuts","cutLeave","poly1","poly2","poly3","poly4","trans","shrink","draw","segsLine","testCut","seg1","Seg","seg2","seg3","intersect","edges","circles","circle","area","cut","shratio","testCentroid","testRadical","radical","stroke3","addStroke","closeContours","strokes","equal","conn","union","contourLabels","first","restLabels","unioned","label","undoCutThrough","flat","undoCut","split","splitted","unionedContour","sub","center","iadd","neg","color","strokeStyle","index","entries","abs","FourPointIntersect","head1","tail1","head2","tail2","h1h2","h1t1","h2t2","detA","cross","detB","detS","ratioA","ratioB","lerp","det","TwoSegIntersect","hd","tl","rotate","angle","origin","mag","torque","Torque","fromVec","that","toString","closed","actualVecs","toVecs","is","pop","transVec","actualOrigin","reverse","vals","mid","isClosed","rotateSlice","start","end","setAttr","cutEntrance","splice","indexGoing","points","isArray","newPoint","cutTip","cutThrough","exitIndex","find","attr","cutExit","findIndex","rightStart","rightEnd","leftStart","leftEnd","left","right","join","EPSILON","lt0","gt0","lt1","gt1","intersectCrits","t","u","body","cutterSeg","position","segIndex","res","filter","ratioCutter","ratioCuttee","sort","rP","rN","segList","displayed","joint","thisPos","thatPos","unshift","cuttee","notchIndex","cutter","nextCutter","intersects","entered","notchPrev","torques","prodSum","toProduct","accX","accY","massSum","mass","ang","cos","sin","name","about","theta","rad","dot","hypot","norm","atan2","addAttr","attrName","attrValue","attrObject","Object","assign","JSON","parse","stringify","keys","toFixed","k"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Main.js\");\n","CanvasRenderingContext2D.prototype.lineToVec = function(vec){\n    this.lineTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.moveToVec = function(vec){\n    this.moveTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.bezierCurveTo = function(cv1, cv2, ev){\n    this.bezierCurveTo(cv1.x, cv1.y, cv2.x, cv2.y, ev.x, ev.y);\n}\n\n\nCanvasRenderingContext2D.prototype.point = function(v){\n\n    if (v != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.beginPath()\n        this.arc(v.x*ratio, v.y*ratio, 1.8, 0, Math.PI*2);\n        this.fill();\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawSegs = function(segs){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        this.beginPath();\n        this.moveToVec(segs[0].head.mult(ratio));\n        for (let seg of segs){\n            this.lineToVec(seg.tail.mult(ratio));\n        }\n        this.stroke();\n    } catch {\n        console.log('Illegal line segs: ', segs);\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawContours = function(contours){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        for (let contour of contours){\n            this.moveToVec(contour[0].head.mult(ratio));\n            for (let seg of contour){\n                this.lineToVec(seg.tail.mult(ratio));\n            }\n            this.closePath();\n        }\n    } catch {\n        console.log('Illegal line segs: ', contours);\n    }\n}\n\n\nCanvasRenderingContext2D.prototype.text = function(text, vec, fontsize){\n\n    this.save();\n    this.font = `${fontsize ? fontsize : 10}px Helvetica`;\n    this.textAlign = 'center';\n    this.textBaseline = 'middle';\n    if (vec != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.fillText(text, vec.x*ratio, vec.y*ratio);\n    }\n    this.restore();\n}\n\nCanvasRenderingContext2D.prototype.drawBound = function(vecs, num, {r, g, b}){\n\n    let centroid = toPolyCentroid(vecs);\n    if (num !== undefined){\n        this.save();\n        this.fillStyle = 'rgb(128, 0, 0, 0.3)';\n        this.text(num, centroid);\n        this.restore();\n    } else {\n        this.point(centroid);\n    }\n\n    this.fillStyle = `rgba(${r*128}, ${g}, ${b}, 0.1)`;\n    this.beginPath();\n    this.drawZig(vecs);\n    this.closePath();\n    this.fill();\n}\n","// Extended JavaScript native Array class with handy methods.\n\nexport default class List extends Array {\n    constructor(...args){\n        super(...args);\n    }\n\n    most(){\n        return this.slice(0, -1);\n    }\n\n    last(){\n        return this[this.length - 1];\n    }\n\n    rest(){\n        return this.slice(1);\n    }\n\n    sum() {\n        if(!this.same(e => e.constructor)){\n            throw Error('Sum: cannot be applied to elements with different type');\n        }\n        let Cons = this[0].constructor,\n            func = (acc, n) => acc.add ? acc.add(n) : (acc + n);\n\n        return this.reduce(func, new Cons());\n    }\n    \n    same(func=(e) => e){\n        return this.every((v, i, a) => func(v) === func(a[0]));\n    }\n\n    accum(accumFunc=e=>e){\n        return this.reduce((acc, x) => {\n            return acc.concat(acc.last() + accumFunc(x))\n        }, List.from([0]))\n    }\n\n    transpose(func=(e)=>e){\n        if((this[0].length) && (this[0].length > 0) && this.same(e => e.length)){\n            let newList = this[0].map((_e, i) => {\n                return func(this.map(e => e[i]));\n            })\n            return new List(...newList);\n        } else throw Error('transpose: Invalid array dimension for transposing');\n    }\n\n    diff(diffFunc=e=>e){\n        if (this.length < 2){\n            throw Error('diff: at least two element to get a diff result');\n        } \n        const list = List.from([this.most(), this.rest()]);\n        return list.transpose(diffFunc);\n    }\n\n    // copy the list, and try to clone the elements if\n    // a copy method exists.\n    copy(){\n        return this.map(e => e.copy ? e.copy() : e);\n    }\n\n}\n","import './CanvasExtend';\n\nimport Vec from './Vec';\nimport List from './List';\nimport Segs from './Segs';\nimport Radical from './Radical';\nimport Stroke from './Stroke';\nimport Seg from './Seg';\n\nlet canvas = document.createElement('canvas'),\n    ctx = canvas.getContext('2d'),\n    dpr = window.devicePixelRatio;\n\ncanvas.width  = 400 * dpr;\ncanvas.height = 400 * dpr;\ncanvas.style.width  = 400;\ncanvas.style.height = 400;\ndocument.getElementById('canvas-container').appendChild(canvas);\nctx.translate(canvas.width/2, canvas.height/2);\nctx.scale(dpr, dpr);\n\nfunction tes(){\n    let len  = 19, range = 5;\n    let vecsCircles = new List(0);\n    for (let r = 0; r < 6; r++){\n\n        let vecs = Array(len).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.8 * (r+1) / range));\n\n        vecsCircles.push((new Segs(0)).fromVecs(vecs));\n\n        if(r % 2 === 1){\n            console.log(vecsCircles[r]);\n            vecsCircles[r].flip();\n        }\n    }\n\n    let poly = new Radical(vecsCircles),\n        polyCopy = poly.copy();\n    console.log(poly)\n    // poly.shrink(0.05, ctx);\n    // polyCopy.draw(ctx);\n    // poly.draw(ctx);\n}\n// testRadical();\n\nfunction testShrink(){\n    let len  = 12;\n    let vecsCircle =(new List(len)).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.5));\n    let vecsLine = Array(len).fill(0).map((e, i)=> new Vec( i/(6-1)*2 - 1, 0.3) );\n\n    // let poly1 = new Radical([(new Segs(0).fromVecs(vecsCircle))]);\n\n    let stroke1 = new Stroke((new Segs(0)).fromVecs(vecsCircle), true),\n        stroke2 = new Stroke(new Segs(0).fromVecs(vecsLine));\n\n    let enter = 3;\n    stroke1.segs.cutEnter(enter, 0.5);\n    stroke1.segs.cutGoing(enter+1, new Vec(0.1, 0));\n    stroke1.segs.cutGoing(enter+2, new Vec(-0.1, 0));\n    let cuts = stroke1.segs.cutLeave(enter+3, 14, 0.5);\n    console.log(cuts[0].map(e=>e.head),'cutresult');\n    let poly1 = new Radical(new List(cuts[0])),\n        poly2 = new Radical(new List(cuts[1])),\n        poly3, poly4;\n\n\n    poly1 = poly1.copy();\n    poly2 = poly2.copy();\n    poly1.trans(new Vec(-0.15, 0.1));\n    poly2.trans(new Vec(0.15, -0.1));\n    poly3 = poly1.copy();\n    poly4 = poly2.copy();\n    poly1.shrink(0.05);\n    poly2.shrink(0.05);\n\n    console.log(poly1, poly2);\n    poly1.draw(ctx, true);\n    poly2.draw(ctx, true);\n    poly3.draw(ctx);\n    poly4.draw(ctx);\n\n    // stroke1.draw(ctx);\n    // stroke2.draw(ctx);\n\n    // segs1.flip();\n    // console.assert(segs1[0].head === segs2.last().tail, 'Segs: flip error');\n\n    let segsLine = new Segs(vecsLine);\n    // console.log(segsLine.torque().center);\n}\n// testShrink();\n\nfunction testCut(){\n\n    let seg1 = new Seg(new Vec(0, 0), new Vec(0, 1)),\n        seg2 = new Seg(new Vec(0, 0), new Vec(1, 0)),\n        seg3 = new Seg(new Vec(-1, 0), new Vec(2, 0));\n\n    console.log(seg1.intersect(seg2));\n    console.log(seg1.intersect(seg3));\n\n    let edges  = 4,\n        circles = new List(0);\n    for (let i = 0; i < 4; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.2)),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n    }\n    let poly = new Radical(circles);\n\n    let len = 14,\n        width = 0.6;\n    for (let i = 0; i < 4; i++){\n        let vecsLine = [new Vec(-0.2 *(i+1), i*0.05), new Vec(0, i*0.05), new Vec(0.2 * (i+1), i*0.05)];\n        let stroke = new Stroke(new Segs(0).fromVecs(vecsLine));\n        poly.contours = stroke.cut(poly.contours);\n        poly = poly.copy();\n        stroke.draw(ctx, false);\n    }\n\n    let shratio = -0.02;\n    poly = poly.copy();\n    poly.shrink(shratio);\n    poly.draw(ctx, true, '#34567888');\n    \n}\n// testCut();\n\nfunction testCentroid(){\n    let edges = 4,\n        circles = new List(0);\n    for (let i = 0; i < 5; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.1).add(new Vec(i*0.05, 0))),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n\n    }\n    let poly = new Radical(circles);\n\n    poly.draw(ctx, true)\n}\n// testCentroid();\nfunction testRadical(){\n    let radical = new Radical();\n\n    let stroke1 = new Stroke(new Segs(0).fromVecs([new Vec(-0.4, 0), new Vec(0.4, 0)]));\n    let stroke2 = new Stroke(new Segs(0).fromVecs([new Vec(0.4, -0.4), new Vec(0.1, 0.1), new Vec(0.4, 0.4)]));\n    let stroke3 = new Stroke(new Segs(0).fromVecs([new Vec(0, -0.4), new Vec(0, 0.4)]));\n    radical.addStroke(stroke1, [0]);\n    radical.addStroke(stroke3, [0, 1], [1]);\n    // radical.addStroke(stroke3, [0]);\n    // radical.addStroke(stroke2, [2]);\n    // radical.shrink(-0.02);\n    radical.draw(ctx, false);\n    console.log(radical.contours);\n}\ntestRadical();\n","import List from './List';\nimport Segs from './Segs';\nimport Seg from './Seg';\nimport Vec from './Vec';\n\nexport default class Radical {\n    constructor(contours){\n\n        if (contours === undefined){\n            contours = new List((new Segs(0)).fromVecs([new Vec(-1, -1), new Vec(1, -1), new Vec(1, 1), new Vec(-1, 1)]))\n        }\n\n        this.contours = contours;\n        this.closeContours();\n\n        this.strokes = [];\n    }\n\n    closeContours(){\n        for (let contour of this.contours){\n\n            if(!contour.last().tail.equal(contour[0].head)){\n                let conn = new Seg(contour.last().tail, contour[0].head);\n                contour.push(conn); \n            } else {\n                contour.last().tail = contour[0].head;\n            }\n        }\n    }\n\n    union(contourLabels) {\n        if(contourLabels.length === 1){\n            return this.contours[contourLabels[0]].copy();\n        } else if (contourLabels.length > 1){\n            let contours = this.contours.copy(),\n                [first, ...restLabels] = contourLabels,\n                unioned = contours[first].copy();\n            \n            // console.log(JSON.stringify(contourLabels.map(e => contours[e]), null, 2));\n            for (let label of restLabels){\n                unioned.undoCutThrough(contours[label]);\n                console.log(unioned.map(({head, tail}) => [head, tail]).flat(), 'before undo cut');\n                unioned.undoCut();\n            }\n            return unioned;\n        } else throw Error('Radical union: YOU MUST EXPLICITLY SPECIFY THE LABELS OF CONTOURS TO BE UNIONED')\n    }\n\n    split(stroke, contourLabels){\n\n    }\n\n    addStroke(stroke, unioned=[], splitted=[]){\n\n        // 1. get the union of contours and calculate the place;\n        //    where the stroke will be put.\n        let unionedContour = this.union(unioned)\n        stroke.trans(unionedContour.centroid().sub(stroke.center()));\n        console.log('unioned centroidd', unionedContour.centroid());\n        if (splitted.length === 0){\n            this.contours = stroke.cut(this.contours).copy();\n            // console.log('addstroke', this.contours)\n            this.closeContours();\n        } else {\n            // if to split specified\n        }\n\n        this.strokes.push(stroke);\n    }\n\n    copy(){\n        let poly = new Radical(this.contours.copy());\n        // poly.close();\n        return poly;\n    }\n\n    trans(vec){\n        for (let contour of this.contours){\n            contour.trans(vec);\n            contour.last().tail.iadd(vec.neg());\n        }\n    }\n\n    draw(ctx, stroke, color='rgb(0, 0, 0, 0.1)'){\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle=color;\n        ctx.beginPath();\n        ctx.drawContours(this.contours);\n        ctx.fill();\n        if(stroke)\n        ctx.stroke();\n\n        ctx.save();\n        ctx.fillStyle='rgb(0, 0, 0, 0.2)'\n        for (let i = 0; i < this.contours.length; i++){\n            let contour = this.contours[i];\n            for (let [index, seg] of contour.entries()){\n                if(stroke)\n                    ctx.text(index, seg.head);\n                else\n                    ctx.point(seg.head);\n            }\n            ctx.text(i, contour.centroid(), Math.abs(contour.area())*80);\n        }\n        ctx.restore();\n\n        ctx.save();\n        for (let stroke of this.strokes){\n            stroke.draw(ctx);\n        }\n        ctx.restore();\n    }\n\n}\n\n","// The design of seg\n// -----------------\n// 1) Cloning Vector or Not?\n// Line segment is the class for building polygon and path. In our scenario, we have two\n// frequent operation of\n// \n// * cutting through the polygon and merge them back from the cutting path.\n// * move the cutting path.\n// \n// The problem of cloning vector, is once we cloned the vector, we will lose the information\n// that if the edge of two polygons are actually sharing same path. Thus, before we really need\n// to modify the polygons, such as shrinking, we will keep the segs created from same vector\n// always refer to same vector object.\n\nimport Torque from './Torque';\n\n// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n// \n// note that:\n// |x1-x3 x3-x4|\n// |           | (determinant) is equivalent to\n// |y1-y3 y3-y4|\n// \n// cross((x1-x3, y1-y3), (x3-x4, y3-y4)), or\n// \n// cross(P1-P3, P3-P4)\n\nfunction FourPointIntersect(head1, tail1, head2, tail2){\n    let h1h2 = head1.diff(head2),\n        h1t1 = head1.diff(tail1),\n        h2t2 = head2.diff(tail2),\n        detA = h1h2.cross(h2t2),\n        detB = h1t1.cross(h1h2),\n        detS = h1t1.cross(h2t2),\n        ratioA =  detA/detS,\n        ratioB = -detB/detS,\n        point = head1.lerp(ratioA, tail1),\n        det = detS;\n    \n    return {\n        ratioA, // mag(point - head1) / mag(tail1 - head1)\n        ratioB, // mag(point - head2) / mag(tail2 - head2)\n        point, // point\n        det  // h1t1 x h2t2 (for determining the direction)\n    }\n}\n\nfunction TwoSegIntersect(seg1, seg2){\n    const {head: head1, tail:tail1} = seg1;\n    const {head: head2, tail:tail2} = seg2;\n    return FourPointIntersect(head1, tail1, head2, tail2);\n}\n\nexport default class Seg {\n    constructor(hd, tl){\n        this.head = hd;\n        this.tail = tl;\n    }\n\n    // ==============================================\n    // in-place operations / transforms\n\n    trans(vec){\n        this.head.trans(vec);\n        this.tail.trans(vec);\n    }\n\n    rotate(angle, origin){\n        this.head.rotate(angle, origin);\n        this.tail.rotate(angle, origin);\n    }\n\n    scale(mag){\n        this.head.mult(mag);\n        this.tail.mult(mag);\n    }\n\n    flip(){\n        const {head, tail} = this;\n        this.head = tail;\n        this.tail = head;\n    }\n\n    // ==============================================\n    // operations that producing other type of values\n\n    diff (){\n        const {head, tail} = this;\n        return tail.diff(head);\n    }\n\n    len (){\n        return this.diff().mag();\n    }\n\n    lerp(ratio){\n        const {head, tail} = this;\n        return head.lerp(ratio, tail);\n    }\n\n    torque(){\n        const {head, tail} = this;\n        return Torque.fromVec(tail.diff(head));\n    }\n\n    intersect(that){\n        return TwoSegIntersect(this, that);\n    }\n\n    cross(){\n        const {head, tail} = this;\n        return head.cross(tail);\n    }\n\n    copy(){\n        return new Seg(this.head.copy(), this.tail.copy());\n    }\n\n    toString() {\n        return `[${this.head.toString()} ${this.tail.toString()}]`\n    }\n}","import List from './List';\nimport Seg from './Seg';\nimport Vec from './Vec';\nimport Torque from './Torque';\n\nexport default class Segs extends List {\n    constructor(...segs){\n        super(...segs);\n    }\n\n    static fromVecs(vecs, {closed=false}={}){\n        const actualVecs = closed ? vecs.concat(vecs[0]) : vecs;\n\n        let list = actualVecs.diff(([head, tail])=>new Seg(head, tail));\n        return new Segs(...list);\n    }\n\n    toVecs(){\n        let last;\n        let vecs = [];\n        for (let {head, tail} of this){\n            if (!head.is(last)){\n                vecs.push(head);\n                last = head;\n            }\n            if (!tail.is(last)){\n                vecs.push(tail);\n                last = tail;\n            }\n        }\n\n        // for closed segs (polygon), needed to remove the last one\n        if (last.is(vecs[0])){\n            vecs.pop();\n        }\n        return vecs;\n    }\n\n    trans(transVec){\n        const vecs = this.toVecs();\n\n        for (let vec of vecs){\n            vec.trans(transVec);\n        }\n    }\n\n    rotate(angle, origin){\n        const vecs = this.toVecs();\n        for (let vec of vecs){\n            vec.rotate(angle, origin);\n        }\n    }\n\n    scale(ratio, origin){\n        const actualOrigin = origin || this[0].head;\n        const vecs = this.toVecs();\n        for (let vec of vecs){\n            vec.mult(ratio, actualOrigin);\n        }\n    }\n\n    flip(){\n        this.reverse();\n        for (let seg of this){\n            seg.flip();\n        }\n    }\n\n    area(){\n\n        if (this.length < 3 || this.last().tail !== this[0].head){\n            throw Error('Area can be found from closed segment lists a.k.a polygon');\n        }\n        const vals = this.map(seg => 0.5* seg.cross());\n        return vals.sum();\n    }\n\n    centroid(){\n        let area = this.area();\n\n        return this\n            .map(e => {\n                const mid = e.lerp(1/2);\n                mid.mult(e.cross() / (3 * area))\n                return mid;\n            })\n            .sum();\n    }\n\n    isClosed() {\n        return this.last().tail === this[0].head;\n    }\n\n    // to make slicing more intuitive, the slice INCLUDES the element\n    // with the end index.\n    rotateSlice(start, end) {\n        if (start < end) {\n            return this.slice(start, end + 1);\n        } else if (start === end){\n            return this.slice();\n        } else if (this.isClosed()){\n            return this.slice(start).concat(this.slice(0, end + 1));\n        } else {\n            return {\n                head: this.slice(start),\n                tail: this.slice(0, end + 1)\n            }\n        }\n    }\n\n    /**\n     * cutEnter\n     * make the entrance of a cutting\n     * expected to receive the result from intersection.\n     * @param {object} param0 \n     */\n    cutEnter({index, point}){\n        \n        point.setAttr({cutEntrance: true});\n        const {head, tail} = this[index];\n        this.splice(index, 1, new Seg(head, point), new Seg(point, tail));\n\n        return {indexGoing:index, point}\n    }\n\n    /**\n     * cutGoing\n     * cutting further from the cut entrance.\n     * except the receive the result of cutEnter, or last cutGoing\n     * @param {object} param0 \n     */\n    cutGoing({index, point, points}){\n        console.log(points, 'points')\n        if (point !== undefined && point.constructor === Vec){\n            let {tail} = this[index];\n            this.splice(index+1, 0, new Seg(tail, point), new Seg(point, tail));\n            return {indexGoing: index+1}\n        } else if (Array.isArray(points) && points.every(v => v.constructor === Vec)){\n            let i;\n            for (i = 0; i < points.length; i++) {\n                const {tail} = this[i + index];\n                const newPoint = points[i];\n                tail.setAttr({cutTip: undefined});\n                newPoint.setAttr({cutGoing: true, cutTip: true});\n                this.splice(i+index+1, 0, new Seg(tail, newPoint), new Seg(newPoint, tail));\n            }\n            return {indexGoing: i};\n        } else {\n            throw Error('您提供的point或points不合适')\n        }\n    }\n\n    cutThrough(exitIndex){\n\n        const cutTip = this.toVecs().find(({attr:{cutTip}}) => cutTip);\n\n        cutTip.setAttr({cutGoing:undefined, cutTip: undefined, cutExit: true});\n        \n        const {head, tail} = this[exitIndex];\n        this.splice(exitIndex, 1, new Seg(head, cutTip), new Seg(cutTip, tail));\n\n        console.log(this.findIndex, 'findIndex');\n\n        const rightStart = this.findIndex(({head:{attr:{cutExit}},  tail:{attr:{cutGoing}}}) => cutExit   && !cutGoing);\n        const rightEnd   = this.findIndex(({head:{attr:{cutGoing}}, tail:{attr:{cutExit}}})  => cutGoing  &&  cutExit );\n        const leftStart  = this.findIndex(({head:{attr:{cutExit}},  tail:{attr:{cutGoing}}}) => cutExit   &&  cutGoing);\n        const leftEnd    = this.findIndex(({head:{attr:{cutGoing}}, tail:{attr:{cutExit}}})  => !cutGoing &&  cutExit );\n        \n        console.log(rightStart, rightEnd, leftStart, leftEnd);\n\n        const left = this.rotateSlice(leftStart, leftEnd);\n        const right = this.rotateSlice(rightStart, rightEnd);\n\n        return {left, right};\n    }\n\n    torque(){\n        return Torque.sum(this.map(e => e.torque()));\n    }\n\n    copy(){\n        // console.log(this);\n        let segs = this.map(seg => seg.copy ? seg.copy() : seg);\n        for (let i = 0; i < segs.length - 1; i++){\n            segs[i].tail = segs[i+1].head;\n        }\n        return segs;\n    }\n\n    toString(){\n        return this.map(seg => seg.toString()).join('\\n');\n    }\n}","import Seg from './Seg';\nimport List from './List';\n\nconst EPSILON = 1e-10;\n\nconst lt0 = e => e < EPSILON;\nconst gt0 = e => e > EPSILON;\nconst lt1 = e => e < 1 - EPSILON;\nconst gt1 = e => e > 1 - EPSILON;\n\nconst intersectCrits = {\n    head(t, u){\n        return lt0(t) && lt1(u) && gt0(u);\n    },\n    tail(t, u){\n        return gt1(t) && lt1(u) && gt0(u);\n    },\n    body(t, u){\n        return gt0(t) && lt1(t) && gt0(u) && lt1(u);\n    }\n}\n\nfunction intersect(cutterSeg, segs, {position='body'}={}){\n    \n    return segs\n        .map((seg, segIndex) => ({res: cutterSeg.intersect(seg), segIndex}))\n        .filter(({res:{ratioA, ratioB}}) => intersectCrits[position](ratioA, ratioB))\n        .map(({ratioA:ratioCutter, ratioB:ratioCuttee, det}) => ({ratioCutter, ratioCuttee, det}))\n        .sort(({ratioA:rP}, {ratioA:rN}) => rN - rP);\n\n}\n\nexport default class Stroke {\n    constructor(segList, closed){\n        this.segs = segList;\n\n        if (closed){\n            this.closed = true;\n            let conn = new Seg(this.segs.last().tail.copy(), this.segs[0].head.copy());\n            this.segs.push(conn); \n        }\n        \n        this.displayed = this.segs.copy();\n    }\n\n    trans(vec){\n        this.segs.trans(vec);\n        this.displayed = this.segs.copy();\n    }\n\n    joint(that, {thisPos, thatPos}){\n        if (thisPos === 1){\n            this.segs.push(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        } else if (thisPos === 0){\n            this.segs.unshift(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        }\n        this.displayed = this.segs.copy();\n    }\n\n    cut(cuttee){\n\n        let notchIndex;\n\n        for (let cutter = 0; cutter < this.segs.length; cutter++) nextCutter:{\n            const cutterSeg = this.segs[cutter];\n            const position = cutter === 0 ? 'head' : cutter === this.segs.length - 1 ? 'tail' : 'body';\n            const intersects = intersect(cutterSeg, cuttee, {position});\n            \n            if (intersects.length === 0) continue;\n\n            // before encountering the cutted polygon\n            if (notchIndex === undefined){\n\n                // skip this one;\n                if (intersects.length === 0){\n                    continue;\n                } else {\n                    const intersect = position === 'head'\n                        ? intersects.pop()\n                        : intersects[0];\n    \n                    const {point:head, segIndex} = intersect;\n                    const res = cuttee.cutEnter({index: segIndex, point:head});\n                    notchIndex = res.indexGoing;\n                }\n\n            } else {\n\n                // means we havent reach the exit yet.\n                if (intersect.length === 0){\n                    const res = contours[entered].cutGoing({index: notchIndex, point});\n                }\n\n            }\n\n            if(entered !== undefined){\n                // console.log(entered, contours);\n                \n                notchPrev += 1;\n            }\n        }\n\n        return contours;\n        // console.log(contours);\n   }\n\n}","import Vec from './Vec';\n\nexport default class Torque{\n\n    static sum(torques){\n        let prodSum = torques\n                .map(t => t.toProduct())\n                .reduce(({x:accX, y:accY}, {x, y}) => new Vec(accX+x, accY+y), new Vec()),\n            massSum = torques\n                .map(t => t.mass)\n                .reduce((acc, v) => acc + v, 0);\n    \n        prodSum.mult((torques.length === 0) ? 0 : 1/massSum)\n\n        return new Torque({\n            center: prodSum,\n            mass : massSum\n        })    \n    }\n\n    static fromVec(vec){\n        return new Torque({center:(new Vec()).lerp(0.5, vec), mass: vec.mag()});\n    }\n\n    constructor({center=new Vec(), mass=0}={}){\n        // console.log(\"new torque\", center, mass)\n        this.center = center;\n        this.mass   = mass;\n    }\n\n    toProduct(){\n        const {center, mass} = this;\n        const copy = center.copy();\n        copy.mult(mass);\n        return copy;\n    }\n}\n","const EPSILON = 1e-6;\n\nexport default class Vec{\n    /**\n     * Simple Vec class.\n     * \n     * @param {any} x \n     * @param {any} y \n     */\n    constructor(x, y, attr={}){\n        if (y === undefined){\n\n            if(x === undefined) {\n                // For nothing given, new vec created\n                \n                this.x = 0;\n                this.y = 0;\n            } else if (x.constructor === Vec){\n\n                // if argument given as {x:1, y:1}\n                \n                this.x = x.x;\n                this.y = x.y;\n            } else if (x.len !== undefined && x.ang !== undefined){\n\n                // if argument given as {len: 1, ang: 0}\n\n                this.x = x.len * Math.cos(x.ang*Math.PI/180);\n                this.y = x.len * Math.sin(x.ang*Math.PI/180);\n            } else if (typeof x === 'number'){\n\n                // if x is a number \n\n                this.x = Math.cos(x*Math.PI/180);\n                this.y = Math.sin(x*Math.PI/180);\n            } else {\n                throw Error (`unsupported argument type:${typeof x}, constructor:${x.constructor.name}`)\n            }\n        } else {\n            this.x = x;\n            this.y = y;\n        }\n        this.attr = attr;\n    }\n\n    trans({x, y}, {neg=false}={}){\n        if (neg) {\n            this.x -= x;\n            this.y -= y;\n        } else {\n            this.x += x;\n            this.y += y;\n        }\n    }\n\n    mult(vec){\n        if(typeof vec === 'number'){\n            this.y *= vec;\n            this.x *= vec;\n        } else if (vec.constructor === Vec){\n            this.x *= vec.x;\n            this.y *= vec.y;\n        } else {\n            throw Error(`invalid parameter type: ${typeof vec}`);\n        }\n    }\n\n    scale(ratio, about=(new Vec(0, 0))){\n        \n        this.trans(about, {neg: true});\n        this.mult(ratio);\n        this.trans(about);\n    }\n\n    /**\n     * # rotate\n     * \n     * rotate about \n     * \n     * @param {number} theta angle to rotate in degree.\n     */\n    rotate(theta, origin=(new Vec(0, 0))){\n\n        this.trans(origin, {neg:true});\n\n        const {x, y} = this;\n        switch(theta){\n            case 90 :\n                this.x = -y;\n                this.y =  x;\n                break;\n            case -90 : \n                this.x =  y;\n                this.y = -x;\n                break;\n            case 180    : \n            case -180   :\n                this.x = -x;\n                this.y = -y;\n                break;\n            default: \n                let rad = theta / 180 * Math.PI,\n                sin = Math.sin(rad),\n                cos = Math.cos(rad);\n\n                this.x = x * cos - y * sin;\n                this.y = x * sin + y * cos;\n        }\n\n        this.trans(origin);\n    }\n\n    neg(){\n        const {x, y} = this;\n        this.x = -x;\n        this.y = -y;\n    }\n\n    // ==================================================================\n    // creating something new.\n\n    is(vec){\n        return this === vec;\n    }\n\n    // this method should be only used by List.sum method.\n    add({x, y}){\n        return new Vec(this.x + x, this.y + y);\n    }\n\n    diff({x, y}){\n        return new Vec(this.x - x, this.y - y);\n    }\n\n    lerp(ratio, {x, y}){\n        return new Vec(\n            this.x + (x - this.x) * ratio,\n            this.y + (y - this.y) * ratio,\n        )\n    }\n\n    /**\n     * # vector cross product\n     * \n     * returns the cross product between this and vec, or is the result of\n     * determinant:\n     * \n     * |this.x   that.x|\n     * |               |\n     * |this.y   that.y|\n     * \n     * ---\n     * \n     * Note: \n     * 1) the cross product conforms to right-hand rule. When A is assigned to\n     *    the index finger, and B to middle, then the thumb is pointing to AxB.\n     * \n     * 2) When determining of which side does one vector resides on another with\n     *    cross product, according to 1), when AxB is positive, B is on the LEFT\n     *    of A.\n     * \n     * @param {Vec} that another vector\n     */\n    cross(that){\n        return this.x * that.y - that.x * this.y;\n    }\n\n    dot(that){\n        return this.x * that.x + this.y * that.y;\n    }\n \n    mag(){\n        return Math.hypot(this.x, this.y);\n    }\n\n    norm(){\n        let mag = this.mag();\n        return this.mult(mag === 0 ? 0 : 1/mag);\n    }\n\n    angle(){\n        return Math.atan2(this.y, this.x) / Math.PI * 180;\n    }\n\n    addAttr(attrName, attrValue){\n        this.attr[attrName] = attrValue;\n    }\n\n    /**\n     * Set attribute to Vec. overwrite existing attributes.\n     * @param {object} attrObject \n     */\n    setAttr(attrObject){\n        return Object.assign(this.attr, attrObject);\n    }\n\n    /**\n     * copy: duplicate an object instance of this.\n     * @returns {Vec}\n     */\n    copy(){\n        return new Vec(this.x, this.y, JSON.parse(JSON.stringify(this.attr)));\n    }\n\n    toString(){\n        if (Object.keys(this.attr).length > 0){\n            return `(${this.x.toFixed(5)}, ${this.y.toFixed(5)}) {${Object.entries(this.attr).filter(([, v]) => v !== undefined).map(([k, v]) => `${k}:${v}`).join(', ')}}`\n        } else {\n            return `(${this.x.toFixed(5)}, ${this.y.toFixed(5)})`\n        }\n    }\n}"],"sourceRoot":""}