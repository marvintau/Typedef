{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/CanvasExtend.js","webpack:///./src/List.js","webpack:///./src/Main.js","webpack:///./src/Radical.js","webpack:///./src/Seg.js","webpack:///./src/Segs.js","webpack:///./src/Stroke.js","webpack:///./src/Torque.js","webpack:///./src/Vec.js"],"names":["CanvasRenderingContext2D","prototype","lineToVec","vec","lineTo","x","y","moveToVec","moveTo","bezierCurveTo","cv1","cv2","ev","point","v","undefined","dpr","window","devicePixelRatio","ratio","canvas","height","beginPath","arc","Math","PI","fill","drawSegs","segs","head","mult","seg","tail","stroke","console","log","drawContours","contours","contour","closePath","text","fontsize","save","font","textAlign","textBaseline","fillText","restore","drawBound","vecs","num","r","g","b","centroid","toPolyCentroid","fillStyle","drawZig","List","Array","constructor","args","most","slice","last","length","sum","same","e","Error","Cons","func","acc","n","add","reduce","every","i","a","accum","accumFunc","concat","copy","map","zip","newList","_e","document","createElement","ctx","getContext","width","style","getElementById","appendChild","translate","scale","tes","len","range","vecsCircles","Vec","push","Segs","fromVecs","flip","poly","Radical","polyCopy","testShrink","vecsCircle","vecsLine","stroke1","Stroke","stroke2","enter","cutEnter","cutGoing","cuts","cutLeave","poly1","poly2","poly3","poly4","trans","shrink","draw","segsLine","testCut","seg1","Seg","seg2","seg3","intersect","edges","circles","circle","area","cut","shratio","testCentroid","testRadical","radical","stroke3","addStroke","closeContours","strokes","equal","conn","union","contourLabels","first","restLabels","unioned","label","undoCutThrough","undoCut","split","splitted","unionedContour","sub","center","iadd","neg","bisecs","bisec","angleBisect","j","color","strokeStyle","index","entries","abs","segIntersect","head1","tail1","head2","tail2","h1h2","h1t1","h2t2","detT","cross","detU","detS","t","u","p","d","hd","tl","diff","mag","dir","norm","lerp","rotate","angle","irotate","imult","torque","Torque","mass","that","thisDir","thatDir","dot","sign","error","reverse","temp","list","pop","lens","other","intersects","partialSums","component","crosses","transVec","headOffset","pointAt","given","ithSeg","lenInSeg","tan","notch","splice","notchPrev","cutThrough","splitPrev","result","cutThroughRing","ringSegs","splittedRingSegs","thereIsStillNotch","next","thatSlice","intersectHead","cutterSeg","EPSILON","con","sort","intersectTail","intersectSeg","segList","closed","displayed","joint","thisPos","thatPos","unshift","entered","cutter","nextCutter","headIntersects","tailIntersects","left","right","torques","prodSum","toProduct","massSum","attr","ang","cos","sin","isub","polar","ipolar","iscale","about","theta","rad","hypot","atan2","isNaN","addAttr","setAttr","attrObject","Object","assign","removeAttr","attrKey","JSON","parse","stringify","toArray"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Main.js\");\n","CanvasRenderingContext2D.prototype.lineToVec = function(vec){\n    this.lineTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.moveToVec = function(vec){\n    this.moveTo(vec.x, vec.y);\n}\n\nCanvasRenderingContext2D.prototype.bezierCurveTo = function(cv1, cv2, ev){\n    this.bezierCurveTo(cv1.x, cv1.y, cv2.x, cv2.y, ev.x, ev.y);\n}\n\n\nCanvasRenderingContext2D.prototype.point = function(v){\n\n    if (v != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.beginPath()\n        this.arc(v.x*ratio, v.y*ratio, 1.8, 0, Math.PI*2);\n        this.fill();\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawSegs = function(segs){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        this.beginPath();\n        this.moveToVec(segs[0].head.mult(ratio));\n        for (let seg of segs){\n            this.lineToVec(seg.tail.mult(ratio));\n        }\n        this.stroke();\n    } catch {\n        console.log('Illegal line segs: ', segs);\n    }\n}\n\nCanvasRenderingContext2D.prototype.drawContours = function(contours){\n\n    let dpr = window.devicePixelRatio,\n        ratio = this.canvas.height/2/dpr;\n    try {\n        for (let contour of contours){\n            this.moveToVec(contour[0].head.mult(ratio));\n            for (let seg of contour){\n                this.lineToVec(seg.tail.mult(ratio));\n            }\n            this.closePath();\n        }\n    } catch {\n        console.log('Illegal line segs: ', contours);\n    }\n}\n\n\nCanvasRenderingContext2D.prototype.text = function(text, vec, fontsize){\n\n    this.save();\n    this.font = `${fontsize ? fontsize : 10}px Helvetica`;\n    this.textAlign = 'center';\n    this.textBaseline = 'middle';\n    if (vec != undefined){\n        let dpr = window.devicePixelRatio,\n            ratio = this.canvas.height/2/dpr;\n    \n        this.fillText(text, vec.x*ratio, vec.y*ratio);\n    }\n    this.restore();\n}\n\nCanvasRenderingContext2D.prototype.drawBound = function(vecs, num, {r, g, b}){\n\n    let centroid = toPolyCentroid(vecs);\n    if (num !== undefined){\n        this.save();\n        this.fillStyle = 'rgb(128, 0, 0, 0.3)';\n        this.text(num, centroid);\n        this.restore();\n    } else {\n        this.point(centroid);\n    }\n\n    this.fillStyle = `rgba(${r*128}, ${g}, ${b}, 0.1)`;\n    this.beginPath();\n    this.drawZig(vecs);\n    this.closePath();\n    this.fill();\n}\n","// Extended JavaScript native Array class with handy methods.\n\nexport default class List extends Array {\n    constructor(...args){\n        super(...args);\n    }\n\n    most(){\n        return this.slice(0, -1);\n    }\n\n    last(){\n        return this[this.length - 1];\n    }\n\n    sum() {\n        if(!this.same(e => e.constructor)){\n            throw Error('Sum: cannot be applied to elements with different type');\n        }\n        let Cons = this[0].constructor,\n            func = (acc, n) => acc.add ? acc.add(n) : (acc + n);\n\n        return this.reduce(func, new Cons());\n    }\n\n    same(func=(e) => e){\n        return this.every((v, i, a) => func(v) === func(a[0]));\n    }\n\n    accum(accumFunc=(e)=>e){\n        return this.reduce((acc, x) => acc.concat(acc.last() + accumFunc(x)), [0])\n    }\n\n    // copy the list, and try to clone the elements if\n    // a copy method exists.\n    copy(){\n        return this.map(e => e.copy ? e.copy() : e);\n    }\n\n    zip(func=(e)=>e){\n        if((this[0].length) && (this[0].length > 0) && this.same(e => e.length)){\n            let newList = this[0].map((_e, i) => {\n                return func(this.map(e => e[i]));\n            })\n            return new List(...newList);\n        } else throw Error('Invalid array dimension for zipping');\n    }\n}","import './CanvasExtend';\n\nimport Vec from './Vec';\nimport List from './List';\nimport Segs from './Segs';\nimport Radical from './Radical';\nimport Stroke from './Stroke';\nimport Seg from './Seg';\n\nlet canvas = document.createElement('canvas'),\n    ctx = canvas.getContext('2d'),\n    dpr = window.devicePixelRatio;\n\ncanvas.width  = 400 * dpr;\ncanvas.height = 400 * dpr;\ncanvas.style.width  = 400;\ncanvas.style.height = 400;\ndocument.getElementById('canvas-container').appendChild(canvas);\nctx.translate(canvas.width/2, canvas.height/2);\nctx.scale(dpr, dpr);\n\nfunction tes(){\n    let len  = 19, range = 5;\n    let vecsCircles = new List(0);\n    for (let r = 0; r < 6; r++){\n\n        let vecs = Array(len).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.8 * (r+1) / range));\n\n        vecsCircles.push((new Segs(0)).fromVecs(vecs));\n\n        if(r % 2 === 1){\n            console.log(vecsCircles[r]);\n            vecsCircles[r].flip();\n        }\n    }\n\n    let poly = new Radical(vecsCircles),\n        polyCopy = poly.copy();\n    console.log(poly)\n    // poly.shrink(0.05, ctx);\n    // polyCopy.draw(ctx);\n    // poly.draw(ctx);\n}\n// testRadical();\n\nfunction testShrink(){\n    let len  = 12;\n    let vecsCircle =(new List(len)).fill(0).map((e, i) => (new Vec(i/(len)*360)).mult(0.5));\n    let vecsLine = Array(len).fill(0).map((e, i)=> new Vec( i/(6-1)*2 - 1, 0.3) );\n\n    // let poly1 = new Radical([(new Segs(0).fromVecs(vecsCircle))]);\n\n    let stroke1 = new Stroke((new Segs(0)).fromVecs(vecsCircle), true),\n        stroke2 = new Stroke(new Segs(0).fromVecs(vecsLine));\n\n    let enter = 3;\n    stroke1.segs.cutEnter(enter, 0.5);\n    stroke1.segs.cutGoing(enter+1, new Vec(0.1, 0));\n    stroke1.segs.cutGoing(enter+2, new Vec(-0.1, 0));\n    let cuts = stroke1.segs.cutLeave(enter+3, 14, 0.5);\n    console.log(cuts[0].map(e=>e.head),'cutresult');\n    let poly1 = new Radical(new List(cuts[0])),\n        poly2 = new Radical(new List(cuts[1])),\n        poly3, poly4;\n\n\n    poly1 = poly1.copy();\n    poly2 = poly2.copy();\n    poly1.trans(new Vec(-0.15, 0.1));\n    poly2.trans(new Vec(0.15, -0.1));\n    poly3 = poly1.copy();\n    poly4 = poly2.copy();\n    poly1.shrink(0.05);\n    poly2.shrink(0.05);\n\n    console.log(poly1, poly2);\n    poly1.draw(ctx, true);\n    poly2.draw(ctx, true);\n    poly3.draw(ctx);\n    poly4.draw(ctx);\n\n    // stroke1.draw(ctx);\n    // stroke2.draw(ctx);\n\n    // segs1.flip();\n    // console.assert(segs1[0].head === segs2.last().tail, 'Segs: flip error');\n\n    let segsLine = new Segs(vecsLine);\n    // console.log(segsLine.torque().center);\n}\n// testShrink();\n\nfunction testCut(){\n\n    let seg1 = new Seg(new Vec(0, 0), new Vec(0, 1)),\n        seg2 = new Seg(new Vec(0, 0), new Vec(1, 0)),\n        seg3 = new Seg(new Vec(-1, 0), new Vec(2, 0));\n\n    console.log(seg1.intersect(seg2));\n    console.log(seg1.intersect(seg3));\n\n    let edges  = 4,\n        circles = new List(0);\n    for (let i = 0; i < 4; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.2)),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n    }\n    let poly = new Radical(circles);\n\n    let len = 14,\n        width = 0.6;\n    for (let i = 0; i < 4; i++){\n        let vecsLine = [new Vec(-0.2 *(i+1), i*0.05), new Vec(0, i*0.05), new Vec(0.2 * (i+1), i*0.05)];\n        let stroke = new Stroke(new Segs(0).fromVecs(vecsLine));\n        poly.contours = stroke.cut(poly.contours);\n        poly = poly.copy();\n        stroke.draw(ctx, false);\n    }\n\n    let shratio = -0.02;\n    poly = poly.copy();\n    poly.shrink(shratio);\n    poly.draw(ctx, true, '#34567888');\n    \n}\n// testCut();\n\nfunction testCentroid(){\n    let edges = 4,\n        circles = new List(0);\n    for (let i = 0; i < 5; i++){\n        let vecs = (new List(edges+i*4)).fill(0).map((e, n) => (new Vec(n/(edges+i*4)*360+22.5)).mult(0.3+i*0.1).add(new Vec(i*0.05, 0))),\n            circle = new Segs(0).fromVecs(vecs);\n        \n        if(i%2 === 0) {circle.flip()};\n        console.log(circle.area());\n        circles.push(circle);\n\n    }\n    let poly = new Radical(circles);\n\n    poly.draw(ctx, true)\n}\n// testCentroid();\nfunction testRadical(){\n    let radical = new Radical();\n\n    let stroke1 = new Stroke(new Segs(0).fromVecs([new Vec(-0.4, 0.4), new Vec(0.4, 0.4)])),\n        stroke2 = new Stroke(new Segs(0).fromVecs([new Vec(0.4, -0.4), new Vec(0.1, 0.1), new Vec(0.4, 0.4)])),\n        stroke3 = new Stroke(new Segs(0).fromVecs([new Vec(0.4, -0.4), new Vec(0.4, 0.4)]));\n    radical.addStroke(stroke1, [0]);\n    // radical.addStroke(stroke2, [0, 1]);\n    radical.addStroke(stroke3, [0, 1]);\n    radical.addStroke(stroke2, [2]);\n    // radical.shrink(-0.02);\n    radical.draw(ctx, false);\n    console.log(radical.contours);\n}\ntestRadical();\n","import List from './List';\nimport Segs from './Segs';\nimport Seg from './Seg';\nimport Vec from './Vec';\n\nexport default class Radical {\n    constructor(contours){\n\n        if (contours === undefined){\n            contours = new List((new Segs(0)).fromVecs([new Vec(-1, -1), new Vec(1, -1), new Vec(1, 1), new Vec(-1, 1)]))\n        }\n\n        this.contours = contours;\n        this.closeContours();\n\n        this.strokes = [];\n    }\n\n    closeContours(){\n        for (let contour of this.contours){\n\n            if(!contour.last().tail.equal(contour[0].head)){\n                let conn = new Seg(contour.last().tail, contour[0].head);\n                contour.push(conn); \n            } else {\n                contour.last().tail = contour[0].head;\n            }\n        }\n    }\n\n    union(contourLabels) {\n        if(contourLabels.length === 1){\n            return this.contours[contourLabels[0]].copy();\n        } else if (contourLabels.length > 1){\n            let contours = this.contours.copy(),\n                [first, ...restLabels] = contourLabels,\n                unioned = contours[first].copy();\n            \n            // console.log(JSON.stringify(contourLabels.map(e => contours[e]), null, 2));\n            for (let label of restLabels){\n                unioned.undoCutThrough(contours[label]);\n                unioned.undoCut();\n            }\n            // console.log(unioned, 'unioned');\n            return unioned;\n        } else throw Error('Radical union: YOU MUST EXPLICITLY SPECIFY THE LABELS OF CONTOURS TO BE UNIONED')\n    }\n\n    split(stroke, contourLabels){\n\n    }\n\n    addStroke(stroke, unioned=[], splitted=[]){\n\n        // 1. get the union of contours and calculate the place;\n        //    where the stroke will be put.\n        let unionedContour = this.union(unioned)\n        stroke.trans(unionedContour.centroid().sub(stroke.center()));\n        // console.log('addStroke unioned', unionedContour);\n        if (splitted.length === 0){\n            this.contours = stroke.cut(this.contours).copy();\n            // console.log('addstroke', this.contours)\n            this.closeContours();\n        } else {\n            // if to split specified\n        }\n\n        this.strokes.push(stroke);\n    }\n\n    copy(){\n        let poly = new Radical(this.contours.copy());\n        // poly.close();\n        return poly;\n    }\n\n    trans(vec){\n        for (let contour of this.contours){\n            contour.trans(vec);\n            contour.last().tail.iadd(vec.neg());\n        }\n    }\n\n    \n    shrink(shrink){\n\n        let bisecs = new List(0);\n        for (let contour of this.contours){\n            bisecs.push([]);\n            for (let i = 0; i < contour.length; i++){\n                let last = (i === 0) ? contour.length - 1 : i - 1;\n                let bisec = contour[last].angleBisect(contour[i]);\n                bisecs.last().push(bisec.mult(shrink));\n            }\n        }\n\n        for (let i = 0; i < this.contours.length; i++){\n            let contour = this.contours[i];\n            for (let j = 0; j < contour.length; j++){\n                contour[j].head.iadd(bisecs[i][j]);\n            }\n        }\n    }\n\n    draw(ctx, stroke, color='rgb(0, 0, 0, 0.1)'){\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle=color;\n        ctx.beginPath();\n        ctx.drawContours(this.contours);\n        ctx.fill();\n        if(stroke)\n        ctx.stroke();\n\n        ctx.save();\n        ctx.fillStyle='rgb(0, 0, 0, 0.2)'\n        for (let i = 0; i < this.contours.length; i++){\n            let contour = this.contours[i];\n            for (let [index, seg] of contour.entries()){\n                if(stroke)\n                    ctx.text(index, seg.head);\n                else\n                    ctx.point(seg.head);\n            }\n            // ctx.point(contour.centroid());\n            ctx.text(i, contour.centroid(), Math.abs(contour.area())*80);\n        }\n        ctx.restore();\n\n        ctx.save();\n        for (let stroke of this.strokes){\n            stroke.draw(ctx);\n        }\n        ctx.restore();\n    }\n\n}\n\n","// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n// \n// note that:\n// |x1-x3 x3-x4|\n// |           | (determinant) is equivalent to\n// |y1-y3 y3-y4|\n// \n// cross((x1-x3, y1-y3), (x3-x4, y3-y4)), or\n// \n// cross(P1-P3, P3-P4)\n\nfunction segIntersect(head1, tail1, head2, tail2){\n    let h1h2 = head1.sub(head2),\n        h1t1 = head1.sub(tail1),\n        h2t2 = head2.sub(tail2),\n        detT = h1h2.cross(h2t2),\n        detU = h1t1.cross(h1h2),\n        detS = h1t1.cross(h2t2),\n        t = detT/detS,\n        u = -detU/detS,\n        p = head1.add(tail1.sub(head1).mult(t)),\n        d = detS;\n    \n    return {t, u, p, d}\n}\n\nimport Vec from './Vec';\nimport Torque from './Torque';\n\nexport default class Seg {\n    constructor(hd, tl){\n        this.head = hd;\n        this.tail = tl;\n    }\n\n    diff (){\n        return this.tail.sub(this.head);\n    }\n\n    len (){\n        return this.tail.sub(this.head).mag();\n    }\n\n    dir (){\n        return this.tail.sub(this.head).norm();\n    }\n\n    lerp(ratio){\n        return this.head.add(this.tail.sub(this.head).mult(ratio));\n    }\n\n    trans(vec){\n        this.head.iadd(vec);\n        this.tail.iadd(vec);\n    }\n\n    rotate(angle){\n        this.head.irotate(angle);\n        this.tail.irotate(angle);\n    }\n\n    scale(mag){\n        this.head.imult(mag);\n        this.tail.imult(mag);\n    }\n\n    torque(){\n        return new Torque({center:this.lerp(0.5), mass: this.len()});\n    }\n\n    intersect(that){\n        return segIntersect(this.head, this.tail, that.head, that.tail);\n    }\n\n    cross(){\n        return this.head.cross(this.tail);\n    }\n\n    // the previous one connect with the \n    angleBisect(that){\n        if(that.head == this.tail){\n            \n            let thisDir = this.dir().neg(),\n                thatDir = that.dir();\n\n            if(thisDir.cross(thatDir) === 0){\n                if (thisDir.dot(thatDir) > 0){\n                    return thisDir;\n                } else {\n                    return new Vec(-thisDir.y, thisDir.x);\n                }\n            } else {\n                return thisDir.add(thatDir).mult(Math.sign(thisDir.cross(thatDir))).norm();\n            }\n\n\n        } else console.error('angleBisector is only permitted if two segs share same vec', this, that);\n    }\n\n    reverse(){\n        let temp = this.head;\n        this.head = this.tail;\n        this.tail = temp;\n    }\n\n    copy(){\n        return new Seg(this.head.copy(), this.tail.copy());\n    }\n}","import List from './List';\nimport Seg from './Seg';\nimport Vec from './Vec';\nimport Torque from './Torque';\n\nexport default class Segs extends List {\n    constructor(...segs){\n        super(...segs);\n    }\n\n    conn(){\n        for (let i = 0; i < this.length - 1; i++){\n            this[i+1].head = this[i].tail;\n        }\n    }\n\n    area(){\n        return this.map(seg => seg.cross()).sum()/2;\n    }\n\n    centroid(){\n        if (this.length > 0){\n            let area = this.area();\n            return this\n            .map(e => e.head.add(e.tail).mult(e.cross() / (6 * area)))\n            .reduce((acc, e) => acc.add(e), new Vec(0, 0));\n        } else {\n            return undefined;\n        }\n    }    \n\n    fromVecs(vecs){\n        let list = new List(vecs.slice(0, -1), vecs.slice(1))\n        .zip(e=>new Seg(...e));\n\n        while(list.length > 0){\n            this.push(list.pop());\n        }\n        this.reverse();\n        return this;\n    }\n\n    flip(){\n        this.reverse();\n        for (let seg of this){\n            seg.reverse();\n        }\n    }\n\n    lens(){\n        let lens = new List(0);\n        for (let seg of this){\n            lens.push(seg.len());\n        }\n        return lens;\n    }\n\n    intersect(other){\n        let intersects = new List(0)\n        for (let seg of this){\n            intersects.push(other.intersect(seg));\n        }\n    }\n\n    partialSums(component){\n        let sum = [];\n        for (let seg of this){\n            sum.push(seg.head[component]+seg.tail[component]);\n        }\n        return sum;\n    }\n\n    crosses(){\n        let crosses = [];\n        for(let seg of this){\n            crosses.push(seg.head.cross(seg.tail))\n        }\n    }\n\n    trans(transVec){\n        for (let seg of this){\n            console.log('yay', transVec);\n            seg.head.iadd(transVec);\n        }\n        this.last().tail.iadd(transVec);\n    }\n\n    rotate(angle){\n        let headOffset = this[0].head.copy();\n        this.trans(headOffset.neg());\n        for (let seg of this){\n            seg.tail.irotate(angle);\n        }\n        this.trans(headOffset);\n    }\n\n    scale(ratio){\n        let headOffset = this.segs[0].head.copy();\n        this.trans(headOffset.neg());\n        for (let seg of this){\n            seg.tail.imult(ratio);\n        }\n        this.trans(headOffset);\n    }\n\n    pointAt(ratio){\n        let lens = this.lens(),\n            accum = lens.accum(),\n            given = accum.last() * ratio;\n\n        var ithSeg = 0,\n            lenInSeg = 0;\n        for (let [index, len] of accum.entries()){\n            if (given < len) {\n                ithSeg = index - 1;\n                lenInSeg = len - given;\n                break;\n            }\n        }\n\n        return {\n            point: this[ithSeg].lerp(1 - lenInSeg/lens[ithSeg]),\n            tan: this[ithSeg].dir()\n        };\n    }\n\n    cutEnter(notch, ratio){\n        \n        let seg = this[notch],\n            lerp = seg.lerp(ratio),\n            tail = seg.tail;\n\n        seg.tail = lerp;\n        this.splice(notch+1, 0, new Seg(lerp, tail));\n    }\n\n    cutGoing(notchPrev, point){\n        let seg = this[notchPrev];\n        this.splice(notchPrev+1, 0, new Seg(seg.tail, point), new Seg(point, seg.tail.copy()));\n        this[notchPrev+2].head = this[notchPrev+1].tail;\n    }\n\n    cutThrough(notchPrev, splitPrev){\n\n        let result = [];\n        if (notchPrev < splitPrev){\n            console.log('notch - split - 0')\n            result = [this.slice(notchPrev, splitPrev), this.slice(0, notchPrev+1).concat(this.slice(splitPrev))];\n        } else if (notchPrev > splitPrev){\n            console.log('notch - 0 - split')\n            result = [this.slice(notchPrev).concat(this.slice(0, splitPrev)), this.slice(splitPrev, notchPrev)];\n        } else throw Error('its impossible to have same notchPrev and splitPrev', notchPrev, splitPrev);\n\n        return result;\n    }\n\n    cutThroughRing(notchPrev, splitPrev, ringSegs){\n        let splittedRingSegs = [...ringSegs.slice(splitPrev), ...ringSegs.slice(0, splitPrev+1)];\n        return new Segs(...[...this.slice(0, notchPrev+1), ...splittedRingSegs, ...this.slice(notchPrev)]);\n    }\n\n    undoCut(){\n        let thereIsStillNotch = true;\n        while(thereIsStillNotch) next:{\n            for (let i = 0; i < this.length-1; i++){\n                if (this[i].head.equal(this[i+1].tail) && this[i].tail.equal(this[i+1].head)){\n                    console.log(i, 'undo')\n                    this.splice(i, 2);\n                    console.log(this, this[i-1]);\n                    this[i].head = this[i-1].tail;\n                    break next;\n                }\n            }\n            thereIsStillNotch = false;\n        }\n    }\n\n    undoCutThrough(that){\n        for (let i = 0; i < this.length; i++){\n            for (let j = 0; j < that.length; j++){\n                if (this[i].head.equal(that[j].tail) && this[i].tail.equal(that[j].head)){\n                    let thatSlice = [...that.slice(j+1), ...that.slice(0, j)];\n                    console.log('encountered', thatSlice);\n                    this.splice(i+1, ...thatSlice);\n                    return;\n                }\n            }\n        }\n    }\n\n    torque(){\n        return Torque.sum(this.map(e => e.torque()));\n    }\n\n    copy(){\n        // console.log(this);\n        let segs = this.map(seg => seg.copy ? seg.copy() : seg);\n        for (let i = 0; i < segs.length - 1; i++){\n            segs[i].tail = segs[i+1].head;\n        }\n        return segs;\n    }\n}","import Seg from './Seg';\nimport List from './List';\n\nfunction intersectHead(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, d} = cutterSeg.intersect(segs[seg]);\n            if ( t < EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => b.t - a.t)\n    // console.log(intersects, 'headIntersects')\n    return intersects;\n}\n\nfunction intersectTail(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, p, d} = cutterSeg.intersect(segs[seg]);\n            if ( t > 1 - EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, p, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => a.t - b.t)\n    // console.log(intersects, 'tailIntersects')\n    return intersects;\n}\n\n// return intersections between all contours of poly, and\n// the given seg, sorted by t parameter.\nfunction intersectSeg(cutterSeg, contours){\n    let intersects = [];\n    let EPSILON = 1e-10;\n\n    for (let con = 0; con < contours.length; con++){\n        let segs = contours[con];\n        for (let seg = 0; seg < segs.length; seg++){\n            let {t, u, d} = cutterSeg.intersect(segs[seg]);\n            if ( t < 1-EPSILON && t > EPSILON && u < 1-EPSILON && u > EPSILON ){\n                intersects.push({t, u, d, con, seg});\n            }\n        }\n    }\n    intersects.sort((a, b) => a.t - b.t)\n    \n    return intersects;\n}\n\nexport default class Stroke {\n    constructor(segList, closed){\n        this.segs = segList;\n\n        if (closed){\n            this.closed = true;\n            let conn = new Seg(this.segs.last().tail.copy(), this.segs[0].head.copy());\n            this.segs.push(conn); \n        }\n        \n        this.displayed = this.segs.copy();\n    }\n\n    trans(vec){\n        this.segs.trans(vec);\n        this.displayed = this.segs.copy();\n    }\n\n    joint(that, {thisPos, thatPos}){\n        if (thisPos === 1){\n            this.segs.push(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        } else if (thisPos === 0){\n            this.segs.unshift(...(thatPos === 0 ? that.segs : that.segs.reverse()));\n        }\n        this.displayed = this.segs.copy();\n    }\n\n    draw(ctx, stroke){\n        ctx.strokeStyle = 'black';\n        ctx.beginPath();\n        ctx.drawSegs(this.displayed);\n        ctx.stroke();\n    \n        ctx.save();\n        ctx.fillStyle = \"rgb(0, 0, 0, 0.2)\";\n        for (let [index, seg] of this.segs.entries()){\n            if(stroke)\n                ctx.text(index, seg.head);\n            else\n                ctx.point(seg.head);\n        }\n\n        ctx.restore();\n    }\n\n    center(){\n        return this.segs.torque().center;\n    }\n\n    cut(contours){\n\n        let entered, notchPrev, splitPrev;\n\n        for (let cutter = 0; cutter < this.segs.length; cutter++) nextCutter:{\n            let cutterSeg = this.segs[cutter];\n\n            if(cutter===0){\n                let headIntersects = intersectHead(cutterSeg, contours);\n                if (headIntersects.length > 0){\n                    let {t, con, d} = headIntersects[0];\n                    console.log('head', con, t, d);\n                    if (d < 0) cutterSeg.head.iadd(cutterSeg.diff().mult(t-0.01));\n                }\n            }\n\n            if(cutter === this.segs.length - 1){\n                let tailIntersects = intersectTail(cutterSeg, contours);\n                if (tailIntersects.length > 0){\n                    let {t, con, d, p} = tailIntersects[0];\n                    if (d > 0) cutterSeg.tail.iadd(p.sub(cutterSeg.tail).mult(t));\n                }\n            }\n\n            if(entered !== undefined){\n                // console.log(entered, contours);\n                contours[entered].cutGoing(notchPrev, cutterSeg.head);\n                notchPrev += 1;\n            }\n\n            // find the intersections bettwen the segment from cutter\n            // stroke and from all contours. Sort them by the distance\n            // bettwen the intersection to the head of cutter segment.\n            while(true){\n                let intersects = intersectSeg(cutterSeg, contours);\n                if (intersects.length === 0) break;\n\n                let {u, d, con, seg} = intersects[0];\n                if (entered === undefined){\n                    console.log('entered', con);\n                    entered = con;\n                    notchPrev = seg;\n                    contours[entered].cutEnter(notchPrev, u);\n                } else {\n\n                    splitPrev = seg;\n                    if (entered === con) {\n                        console.log('cutting through self');\n                        contours[entered].cutEnter(splitPrev, u);\n                        notchPrev += notchPrev > splitPrev ? 1: 0;\n    \n                        let [left, right] = contours[entered].cutThrough(notchPrev+1, splitPrev+1);\n                        contours.splice(con, 1, left, right);\n                    } else {\n                        console.log('cutting through ring', con);\n                        contours[con].cutEnter(splitPrev, u);\n                        contours[entered] = contours[entered].cutThroughRing(notchPrev+1, splitPrev+1, contours[con]);\n                        contours.splice(con, 1);\n                    }\n                    entered = undefined;\n                    // console.log('contours', contours);\n                }    \n            }\n        }\n\n        return contours;\n        // console.log(contours);\n   }\n\n}","import Vec from './Vec';\n\nexport default class Torque{\n\n    static sum(torques){\n        let prodSum = torques\n                .map(t => t.toProduct())\n                .reduce((acc, v) => acc.add(v), new Vec(0, 0)),\n            massSum = torques\n                .map(t => t.mass)\n                .reduce((acc, v) => acc + v, 0);\n    \n        return new Torque({\n            center: prodSum.mult((torques.length === 0) ? 0 : 1/massSum),\n            mass : massSum\n        })    \n    }\n\n    constructor({center, mass}){\n        // console.log(\"new torque\", center, mass)\n        this.center = center ? center : new Vec(0, 0);\n        this.mass = mass === undefined ? 0 : mass;\n    }\n\n    toProduct(){\n        return this.center.mult(this.mass);\n    }\n}","const EPSILON = 1e-6;\n\nexport default class Vec{\n    /**\n     * Simple Vector class.\n     * \n     * @param {any} x \n     * @param {any} y \n     */\n    constructor(x, y, attr){\n        if(attr === undefined){\n            this.attr = {};\n\n            if (y === undefined){\n                if(x === undefined) {\n\n                    // For nothing given, new vec created\n                    \n                    this.x = 0;\n                    this.y = 0;\n                } else if (x.x !== undefined && x.y !== undefined){\n\n                    // if argument given as {x:1, y:1}\n                    \n                    this.x = x.x;\n                    this.y = x.y;\n                } else if (x.len !== undefined && x.ang !== undefined){\n\n                    // if argument given as {len: 1, ang: 0}\n\n                    this.x = x.len * Math.cos(x.ang*Math.PI/180);\n                    this.y = x.len * Math.sin(x.ang*Math.PI/180);\n                } else if (typeof x === 'number'){\n\n                    // if x is a number \n\n                    this.x = Math.cos(x*Math.PI/180);\n                    this.y = Math.sin(x*Math.PI/180);\n                }\n            } else {\n                this.x = x;\n                this.y = y;\n            }\n        } else {\n            this.attr = attr;\n            this.x = x;\n            this.y = y;\n        }\n\n        \n    }\n\n    equal(vec){\n        return Math.abs(this.x - vec.x) < EPSILON && Math.abs(this.y - vec.y) < EPSILON;\n    }\n\n    /**\n     * \n     * @param {Vec} vec another vec to be added\n     * @returns {Vec}\n     */\n    add(vec){\n        return new Vec(this.x + vec.x, this.y + vec.y);\n    }\n\n    iadd(vec){\n        this.x += vec.x;\n        this.y += vec.y;\n    }\n    /**\n     * \n     * @param {Vec} vec another vec to be subtracted\n     * @returns {Vec}\n     */\n    sub(vec){\n        return new Vec(this.x - vec.x, this.y - vec.y);\n    }\n\n    isub(vec){\n        this.x -= vec.x;\n        this.y -= vec.y;\n    }\n\n    /**\n     * \n     * @param {Vec, number} vec can be either a vec or a scalar. If it's a scalar,\n     *                          then times it both to x and y.\n     * @returns {Vec}\n     */\n    mult(vec){\n        if(vec.x === undefined){\n            return new Vec(this.x * vec, this.y * vec);\n        } else {\n            return new Vec(this.x * vec.x, this.y * vec.y);\n        }\n    }\n\n    imult(vec){\n        if(vec.x === undefined){\n            this.y *= vec;\n            this.x *= vec;\n        } else {\n            this.x *= vec.x;\n            this.y *= vec.y;\n        }\n    }\n\n    /**\n     * transform point in polar manner. returns a new vector relative\n     * to this one.\n     * @param {number} len length\n     * @param {number} ang angle in degree\n     */\n    polar(vec){\n        return new Vec(\n            this.x + vec.len * Math.cos(vec.ang * Math.PI/180),\n            this.y + vec.len * Math.sin(vec.ang * Math.PI/180)\n        )\n    };\n\n    ipolar(vec){\n        this.x += vec.len * Math.cos(vec.ang * Math.PI/180);\n        this.y += vec.len * Math.sin(vec.ang * Math.PI/180);\n    }\n\n    iscale(ratio, about){\n        // console.log(this, ratio, about, \"iscale\");\n        this.isub(about);\n        this.imult(ratio);\n        this.iadd(about);\n    }\n\n        /**\n     * rotate\n     * @param {number} theta angle to rotate in degree.\n     */\n    rotate(theta){\n\n        switch(theta){\n            case 90     : return new Vec(-this.y, this.x);\n            case -90    : return new Vec(this.y, -this.x);\n            case 180    : \n            case -180   : return new Vec(-this.x, -this.y);\n            default: \n                let rad = theta / 180 * Math.PI,\n                sin = Math.sin(rad),\n                cos = Math.cos(rad);\n\n            return new Vec(\n                this.x * cos - this.y * sin,\n                this.x * sin + this.y * cos\n            )\n        }\n\n    }\n\n    irotate(theta){\n        let vec = this.rotate(theta);\n        this.x = vec.x;\n        this.y = vec.y;\n    }\n\n    neg(){\n        return new Vec(-this.x, -this.y);\n    }\n\n    /**\n     * returns the cross product between this and vec.\n     * also is the result of det\n     * \n     * |this.x   that.x|\n     * |               |\n     * |this.y   that.y|\n     * \n     * also, this can be used for determining which side\n     * does the \"that\" vector resides, left or right.\n     * When the cross product is positive, the \"that\" is\n     * on LEFT of this vector.\n     * \n     * @param {Vec} that another vector\n     */\n    cross(that){\n        return this.x * that.y - that.x * this.y;\n    }\n\n    dot(that){\n        return this.x * that.x + this.y * that.y;\n    }\n \n    mag(){\n        return Math.hypot(this.x, this.y);\n    }\n\n    norm(){\n        let mag = this.mag();\n        return this.mult(mag === 0 ? 0 : 1/mag);\n    }\n\n    angle(){\n        return Math.atan2(this.y, this.x) / Math.PI * 180;\n    }\n\n    isNaN(){\n        return (isNaN(this.x) || isNaN(this.y));\n    }\n\n    addAttr(attr){\n        this.attr.push(attr);\n    }\n\n    /**\n     * Set attribute to Vector. overwrite existing attributes.\n     * @param {object} attrObject \n     */\n    setAttr(attrObject){\n        return Object.assign(this.attr, attrObject);\n    }\n\n    removeAttr(attrKey){\n        this.attr[attrKey] = undefined;\n    }\n\n    /**\n     * copy: duplicate an object instance of this.\n     * @returns {Vec}\n     */\n    copy(){\n        return new Vec(this.x, this.y, JSON.parse(JSON.stringify(this.attr)));\n    }\n\n    toArray(){\n        return [this.x, this.y];\n    }\n\n    draw(ctx){\n        ctx.save();\n\n        ctx.strokeStyle = 'gray';\n        ctx.point(this);\n    \n        ctx.restore();\n    }\n}"],"sourceRoot":""}